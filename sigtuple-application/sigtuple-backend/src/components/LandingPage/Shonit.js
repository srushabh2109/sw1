import React, { useEffect, useRef, useState } from "react";
import { getVideos } from "../../Api";
// import shonitVideo from "../../assests/videos/shonit v6.mp4";

const Shonit = () => {
  // const [show, setShow] = useState(true);
  const [video, setVideo] = useState({});
  const [showVideo, setShowVideo] = useState(true);
  const ref = useRef();

  useEffect(() => {
    const getVideo = async () => {
      let data = await getVideos({ type: "Shonit" });
      setVideo(data);
    };
    getVideo();
  }, []);

  return (
    <div
      className="tab-pane fade show active position-relative"
      id="pills-home"
      role="tabpanel"
      aria-labelledby="pills-home-tab"
    >
      <div className="work-area video-section">
        <div className="container px-0 position-relative ">
          <video
            id="media-video"
            poster="assets/img/Shonit/slider/shonit_video_bg.png"
            src={""}
            type="video/mp4"
            ref={ref}
            controlsList="nodownload"
            onEnded={(e) => {
              setShowVideo(true);
              ref.current.removeAttribute("controls");
            }}
          />
          <div className="video-text text-center">
            {/* <svg width="180" height="69" viewBox="0 0 236 69" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M220.209 1.58121V7.26617H218.245V1.58121H215.158V0H223.301V1.58121H220.209ZM233.846 7.26617V2.16293L231.146 7.26617H229.262L226.562 2.16293V7.26617H224.598V0H227.266L230.204 5.49986L233.142 0H235.8V7.26617H233.846Z" fill="#DE1A1B" />
              <path d="M18.7264 6.90454V11.9768H17.7237C15.4813 11.9768 13.9936 12.3806 13.2605 13.1883C12.5274 13.996 12.1608 15.7998 12.1608 18.5998C12.1608 24.2429 12.0422 27.8074 11.805 29.2936C11.4169 31.5982 10.7539 33.3751 9.81597 34.6243C8.87803 35.8735 7.40646 36.9827 5.40121 37.952C7.77301 38.9427 9.49254 40.4558 10.5599 42.4912C11.6272 44.5265 12.1608 47.8596 12.1608 52.4903C12.1608 56.6903 12.2039 59.1887 12.2902 59.9856C12.4627 61.4502 12.8993 62.4733 13.6001 63.0548C14.3008 63.6364 15.6754 63.9271 17.7237 63.9271H18.7264V68.9994H16.9152C14.8021 68.9994 13.2712 68.8271 12.3225 68.4825C10.9426 67.9871 9.79981 67.1848 8.89421 66.0756C7.98861 64.9664 7.40106 63.561 7.13154 61.8595C6.86202 60.1579 6.71648 57.3688 6.69491 53.4918C6.67335 49.6149 6.49008 46.9334 6.14509 45.4473C5.8001 43.9611 5.10474 42.7873 4.05899 41.9258C3.01324 41.0643 1.66026 40.612 0 40.5689V35.3028C1.66026 35.2597 3.01324 34.8128 4.05899 33.962C5.10474 33.1112 5.8001 31.9428 6.14509 30.4567C6.49008 28.9705 6.67335 26.429 6.69491 22.8321C6.71648 19.2352 6.78116 16.866 6.88897 15.7245C7.08303 13.9152 7.44418 12.4614 7.97245 11.363C8.50071 10.2645 9.15295 9.38683 9.92917 8.72991C10.7054 8.07299 11.6972 7.57223 12.9047 7.22762C13.724 7.01223 15.0609 6.90454 16.9152 6.90454H18.7264ZM24.2022 15.3873C24.4739 15.3873 24.6098 15.523 24.6098 15.7945C24.6098 15.9641 24.4909 16.2695 24.2532 16.7106C21.2979 22.2753 19.8203 29.299 19.8203 37.7818C19.8203 46.4004 21.264 53.3222 24.1512 58.5476C24.423 59.0566 24.5589 59.3959 24.5589 59.5656C24.5589 59.8031 24.457 59.9218 24.2532 59.9218C23.9814 59.9218 23.4209 59.379 22.5717 58.2932C20.4317 55.5108 18.6824 52.211 17.3237 48.3938C15.965 44.5765 15.2856 41.0562 15.2856 37.8327C15.2856 30.8768 17.5444 24.2094 22.0622 17.8303C23.2171 16.2016 23.9305 15.3873 24.2022 15.3873Z" fill="#DE1A1B" />
              <path d="M205.968 6.90479V11.9771H206.971C209.213 11.9771 210.701 12.3809 211.434 13.1886C212.167 13.9963 212.534 15.8001 212.534 18.6001C212.534 24.2431 212.652 27.8077 212.889 29.2938C213.277 31.5984 213.94 33.3753 214.878 34.6246C215.816 35.8738 217.288 36.983 219.293 37.9522C216.921 38.943 215.202 40.456 214.134 42.4914C213.067 44.5268 212.534 47.8598 212.534 52.4906C212.534 56.6905 212.49 59.189 212.404 59.9859C212.232 61.4505 211.795 62.4736 211.094 63.0551C210.394 63.6366 209.019 63.9274 206.971 63.9274H205.968V68.9997H207.779C209.892 68.9997 211.423 68.8273 212.372 68.4827C213.752 67.9873 214.895 67.1851 215.8 66.0758C216.706 64.9666 217.293 63.5612 217.563 61.8597C217.832 60.1582 217.978 57.369 217.999 53.4921C218.021 49.6152 218.204 46.9337 218.549 45.4475C218.894 43.9614 219.59 42.7876 220.635 41.926C221.681 41.0645 223.034 40.6122 224.694 40.5691V35.303C223.034 35.2599 221.681 34.813 220.635 33.9623C219.59 33.1115 218.894 31.943 218.549 30.4569C218.204 28.9707 218.021 26.4293 217.999 22.8323C217.978 19.2354 217.913 16.8662 217.805 15.7247C217.611 13.9155 217.25 12.4617 216.722 11.3632C216.194 10.2648 215.541 9.38708 214.765 8.73015C213.989 8.07323 212.997 7.57247 211.79 7.22786C210.97 7.01248 209.633 6.90479 207.779 6.90479H205.968ZM200.492 15.3876C200.22 15.3876 200.085 15.5233 200.085 15.7947C200.085 15.9644 200.203 16.2698 200.441 16.7109C203.396 22.2756 204.874 29.2993 204.874 37.7821C204.874 46.4006 203.43 53.3225 200.543 58.5479C200.271 59.0569 200.135 59.3962 200.135 59.5658C200.135 59.8033 200.237 59.9221 200.441 59.9221C200.713 59.9221 201.273 59.3792 202.123 58.2934C204.263 55.511 206.012 52.2113 207.371 48.394C208.729 44.5767 209.409 41.0564 209.409 37.833C209.409 30.8771 207.15 24.2097 202.632 17.8306C201.477 16.2019 200.764 15.3876 200.492 15.3876Z" fill="#DE1A1B" />
              <path d="M50.3276 32.7825C49.9009 32.5748 49.3374 32.3398 48.6372 32.0775C47.9369 31.8152 47.1437 31.5666 46.2575 31.3316C45.3712 31.0966 44.4084 30.8999 43.369 30.7414C42.3296 30.5829 41.2629 30.5037 40.1687 30.5037C39.2935 30.5037 38.5467 30.531 37.9286 30.5857C37.3104 30.6403 36.7907 30.7114 36.3694 30.7988C35.9482 30.8862 35.6145 30.9873 35.3683 31.1021C35.1222 31.2168 34.9334 31.3343 34.8021 31.4546C34.6708 31.5748 34.586 31.695 34.5478 31.8152C34.5095 31.9354 34.4903 32.0447 34.4903 32.1431C34.4903 32.471 34.6544 32.7579 34.9827 33.0038C35.3109 33.2497 35.7595 33.4683 36.3284 33.6595C36.8974 33.8508 37.5593 34.0311 38.3142 34.2005C39.0692 34.3699 39.8706 34.5448 40.7185 34.7251C41.5665 34.9055 42.4418 35.1022 43.3444 35.3153C44.247 35.5284 45.1223 35.7771 45.9703 36.0612C46.8182 36.3454 47.6196 36.676 48.3746 37.053C49.1295 37.4301 49.7914 37.87 50.3604 38.3727C50.9293 38.8755 51.3779 39.4547 51.7061 40.1105C52.0344 40.7662 52.1985 41.5149 52.1985 42.3564C52.1985 43.4384 52.007 44.3674 51.6241 45.1434C51.2411 45.9194 50.7297 46.5751 50.0896 47.1107C49.4495 47.6462 48.7083 48.0752 47.8658 48.3976C47.0233 48.72 46.1399 48.9686 45.2153 49.1435C44.2908 49.3184 43.3553 49.4331 42.4089 49.4878C41.4625 49.5424 40.5626 49.5697 39.7092 49.5697C37.4772 49.5697 35.4121 49.3867 33.5138 49.0205C31.6155 48.6544 29.9388 48.1981 28.4836 47.6517V42.2745C29.9826 43.1051 31.6921 43.7554 33.6123 44.2253C35.5325 44.6953 37.5866 44.9303 39.7749 44.9303C41.0659 44.9303 42.119 44.862 42.9341 44.7254C43.7492 44.5887 44.3865 44.4139 44.8461 44.2008C45.3056 43.9876 45.6174 43.7554 45.7815 43.504C45.9457 43.2526 46.0277 43.0122 46.0277 42.7827C46.0277 42.422 45.8636 42.1078 45.5354 41.84C45.2071 41.5723 44.7585 41.3373 44.1896 41.1351C43.6207 40.9329 42.9587 40.7471 42.2038 40.5777C41.4488 40.4083 40.6474 40.2389 39.7995 40.0695C38.9515 39.9001 38.079 39.717 37.1818 39.5203C36.2846 39.3236 35.4121 39.0913 34.5642 38.8236C33.7162 38.5558 32.9148 38.2443 32.1599 37.8891C31.4049 37.5339 30.743 37.1132 30.174 36.6268C29.6051 36.1405 29.1565 35.5776 28.8283 34.9382C28.5001 34.2989 28.3359 33.5584 28.3359 32.7169C28.3359 31.7223 28.511 30.8644 28.8611 30.143C29.2112 29.4217 29.6844 28.807 30.2807 28.2987C30.877 27.7905 31.5663 27.378 32.3486 27.061C33.1309 26.7441 33.9542 26.4982 34.8185 26.3233C35.6829 26.1484 36.5582 26.0282 37.4444 25.9626C38.3306 25.897 39.1731 25.8643 39.9718 25.8643C40.8471 25.8643 41.747 25.908 42.6715 25.9954C43.5961 26.0828 44.5069 26.2058 45.4041 26.3643C46.3012 26.5227 47.1683 26.7058 48.0053 26.9135C48.8423 27.1211 49.6164 27.3397 50.3276 27.5692V32.7825ZM79.5403 48.9632V39.5695H64.0477V48.9632H57.959V26.438H64.0477V34.635H79.5403V26.438H85.629V48.9632H79.5403ZM121.866 37.717C121.866 39.6515 121.51 41.3591 120.799 42.8401C120.088 44.321 119.071 45.5587 117.747 46.5533C116.423 47.5478 114.817 48.2992 112.93 48.8074C111.042 49.3156 108.923 49.5697 106.57 49.5697C104.218 49.5697 102.093 49.3156 100.194 48.8074C98.2961 48.2992 96.6796 47.5478 95.3447 46.5533C94.0099 45.5587 92.9815 44.321 92.2594 42.8401C91.5372 41.3591 91.1762 39.6515 91.1762 37.717C91.1762 35.7825 91.5372 34.0748 92.2594 32.5939C92.9815 31.113 94.0099 29.8753 95.3447 28.8807C96.6796 27.8862 98.2961 27.1348 100.194 26.6266C102.093 26.1184 104.218 25.8643 106.57 25.8643C108.923 25.8643 111.042 26.1184 112.93 26.6266C114.817 27.1348 116.423 27.8862 117.747 28.8807C119.071 29.8753 120.088 31.113 120.799 32.5939C121.51 34.0748 121.866 35.7825 121.866 37.717ZM115.712 37.717C115.712 36.8754 115.578 36.0366 115.31 35.2005C115.041 34.3645 114.566 33.6131 113.882 32.9464C113.198 32.2797 112.265 31.7387 111.084 31.3234C109.902 30.9081 108.397 30.7004 106.57 30.7004C105.345 30.7004 104.267 30.7961 103.337 30.9873C102.407 31.1786 101.603 31.4436 100.925 31.7824C100.246 32.1212 99.6774 32.5174 99.2179 32.971C98.7584 33.4245 98.3918 33.9109 98.1183 34.43C97.8448 34.9492 97.6506 35.4902 97.5357 36.053C97.4208 36.6159 97.3634 37.1705 97.3634 37.717C97.3634 38.2744 97.4208 38.8372 97.5357 39.4056C97.6506 39.9739 97.8448 40.5176 98.1183 41.0367C98.3918 41.5559 98.7584 42.0395 99.2179 42.4876C99.6774 42.9357 100.246 43.3264 100.925 43.6598C101.603 43.9931 102.407 44.2554 103.337 44.4467C104.267 44.6379 105.345 44.7336 106.57 44.7336C108.397 44.7336 109.902 44.5259 111.084 44.1106C112.265 43.6953 113.198 43.1543 113.882 42.4876C114.566 41.8209 115.041 41.0695 115.31 40.2334C115.578 39.3974 115.712 38.5585 115.712 37.717ZM148.896 48.9632V36.3399C148.896 35.4984 148.825 34.7361 148.683 34.053C148.54 33.3699 148.275 32.7852 147.887 32.2988C147.498 31.8125 146.957 31.4354 146.262 31.1677C145.567 30.8999 144.673 30.766 143.579 30.766C142.747 30.766 141.875 30.878 140.961 31.1021C140.047 31.3261 139.142 31.624 138.245 31.9955C137.348 32.3671 136.492 32.7988 135.676 33.2907C134.861 33.7825 134.136 34.2961 133.502 34.8317V48.9632H127.413V26.438H133.502V29.5201C134.268 29.0829 135.083 28.6485 135.947 28.2168C136.812 27.7851 137.731 27.3943 138.704 27.0446C139.678 26.6949 140.712 26.4107 141.806 26.1921C142.9 25.9735 144.055 25.8643 145.269 25.8643C146.79 25.8643 148.149 26.0473 149.347 26.4135C150.545 26.7796 151.56 27.2987 152.392 27.9709C153.223 28.643 153.861 29.4572 154.304 30.4135C154.747 31.3699 154.968 32.4382 154.968 33.6185V48.9632H148.896ZM161.927 48.9632V26.438H168.016V48.9632H161.927ZM187.71 31.3398V48.9632H181.621V31.3398H172.053V26.438H197.294V31.3398H187.71Z" fill="#DE1A1B" />
            </svg> */}
            <img
              src="assets/img/shonit_01.png"
              className="img-fluid"
              alt=""
            ></img>
          </div>
          <div
            id="play-pause-button"
            className={`${showVideo ? `play-btn` : ""}`}
            onClick={(e) => {
              if (showVideo) {
                setShowVideo(false);
                ref.current.setAttribute("controls", "controls");
                ref.current.play();
              } else {
                setShowVideo(true);
                ref.current.removeAttribute("controls");
                ref.current.load();
              }
            }}
          >
            {
              showVideo ? (
                <i className="fa fa-play" aria-hidden="true"></i>
              ) : null
              //  <i className="fa fa-pause" aria-hidden="true" style={{ marginLeft: "15px" }}></i>
            }
          </div>
        </div>
      </div>

      {/* <div className="work-box1" onClick={(e => {
        setShowVideo(true)
      })}>
        {showVideo ?
          <>
            <video src={video && video.video ? video.video[0].url : null} type="video/mp4" autoPlay muted className="img-fluid tab-video" ref={ref} controls controlsList="nodownload" onEnded={(e => {
              setShowVideo(false)
            })} /> */}
      {/* <div className="play-btn1"
                onClick={
                    e => {
                        if(show){
                            setShow(false)
                            ref.current.play()
                        }
                        else{
                            setShow(true)
                            ref.current.pause()
                        }
                    }
            }> */}
      {/* {
                show ? <i className="bi bi-play-fill"></i> : <i className="bi bi-pause-fill"></i>
            } 
             */}
      {/* </div> */}
      {/* </>
          :
          <> */}
      {/* <div className="text_section_blood">Shonit <strong>in Action</strong></div>       */}
      {/* <div className="blood image_section_blood">
              <img src="assets/img/shonit.png" />
              <div className="play-btn1">
                <i className="bi bi-play-fill"></i>
              </div>
            </div>
          </>}
      </div> */}
    </div>
  );
};

export default Shonit;
