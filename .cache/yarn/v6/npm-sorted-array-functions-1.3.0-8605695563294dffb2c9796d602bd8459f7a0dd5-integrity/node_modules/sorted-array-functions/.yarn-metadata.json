{
  "manifest": {
    "name": "sorted-array-functions",
    "version": "1.3.0",
    "description": "Maintain and search through a sorted array using some low level functions",
    "main": "index.js",
    "dependencies": {},
    "devDependencies": {
      "standard": "^8.4.0",
      "tape": "^4.6.2"
    },
    "scripts": {
      "test": "standard && tape test.js"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/mafintosh/sorted-array-functions.git"
    },
    "author": {
      "name": "Mathias Buus",
      "url": "@mafintosh"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/mafintosh/sorted-array-functions/issues"
    },
    "homepage": "https://github.com/mafintosh/sorted-array-functions",
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-sorted-array-functions-1.3.0-8605695563294dffb2c9796d602bd8459f7a0dd5-integrity/node_modules/sorted-array-functions/package.json",
    "readmeFilename": "README.md",
    "readme": "# sorted-array-functions\n\nMaintain and search through a sorted array using some low level functions\n\n```\nnpm install sorted-array-functions\n```\n\n[![build status](http://img.shields.io/travis/mafintosh/sorted-array-functions.svg?style=flat)](http://travis-ci.org/mafintosh/sorted-array-functions)\n\n## Usage\n\n``` js\nvar sorted = require('sorted-array-functions')\nvar list = []\n\nsorted.add(list, 1)\nsorted.add(list, 4)\nsorted.add(list, 2)\n\nconsole.log(list) // prints out [1, 2, 4]\nconsole.log(sorted.has(list, 2)) // returns true\nconsole.log(sorted.has(list, 3)) // returns false\nconsole.log(sorted.eq(list, 2)) // returns 1 (the index)\nconsole.log(sorted.gt(list, 2)) // returns 2\nconsole.log(sorted.gt(list, 4)) // returns -1\n```\n\n## API\n\n#### `sorted.add(list, value, [compare])`\n\nInsert a new value into the list sorted.\nOptionally you can use a custom compare function that returns, `compare(a, b)` that returns 1 if `a > b`, 0 if `a === b` and -1 if `a < b`.\n\n#### `sorted.addFromFront(list, value, [compare])`\n\nInserts a new value (same result as `sorted.add()`) optimized for prepend.\n\n#### `var bool = sorted.remove(list, value, [compare])`\n\nRemove a value. Returns true if the value was in the list.\n\n#### `var bool = sorted.has(list, value, [compare])`\n\nCheck if a value is in the list.\n\n#### `var index = sorted.eq(list, value, [compare])`\n\nGet the index of a value in the list (uses binary search).\nIf the value could not be found -1 is returned.\n\n#### `var index = sorted.gte(list, value, [compare])`\n\nGet the index of the first value that is `>=`.\nIf the value could not be found -1 is returned.\n\n#### `var index = sorted.gt(list, value, [compare])`\n\nGet the index of the first value that is `>`.\nIf the value could not be found -1 is returned.\n\n#### `var index = sorted.lte(list, value, [compare])`\n\nGet the index of the first value that is `<=`.\nIf the value could not be found -1 is returned.\n\n#### `var index = sorted.lt(list, value, [compare])`\n\nGet the index of the first value that is `<`.\nIf the value could not be found -1 is returned.\n\n## License\n\nMIT\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2016 Mathias Buus\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/sorted-array-functions/-/sorted-array-functions-1.3.0.tgz#8605695563294dffb2c9796d602bd8459f7a0dd5",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/sorted-array-functions/-/sorted-array-functions-1.3.0.tgz",
    "hash": "8605695563294dffb2c9796d602bd8459f7a0dd5",
    "integrity": "sha512-2sqgzeFlid6N4Z2fUQ1cvFmTOLRi/sEDzSQ0OKYchqgoPmQBVyM3959qYx3fpS6Esef80KjmpgPeEr028dP3OA==",
    "registry": "npm",
    "packageName": "sorted-array-functions",
    "cacheIntegrity": "sha512-2sqgzeFlid6N4Z2fUQ1cvFmTOLRi/sEDzSQ0OKYchqgoPmQBVyM3959qYx3fpS6Esef80KjmpgPeEr028dP3OA== sha1-hgVpVWMpTf+yyXltYCvYRZ96DdU="
  },
  "registry": "npm",
  "hash": "8605695563294dffb2c9796d602bd8459f7a0dd5"
}