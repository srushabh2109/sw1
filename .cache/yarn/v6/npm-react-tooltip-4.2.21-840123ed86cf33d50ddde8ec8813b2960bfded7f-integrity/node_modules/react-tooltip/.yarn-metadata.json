{
  "manifest": {
    "name": "react-tooltip",
    "version": "4.2.21",
    "description": "react tooltip component",
    "main": "dist/index.js",
    "types": "dist/react-tooltip.d.ts",
    "module": "dist/index.es.js",
    "jsnext:main": "dist/index.es.js",
    "engines": {
      "npm": ">=6.13"
    },
    "scripts": {
      "pretest": "npm-run-all pretty:quick lint:staged",
      "eslint:fix": "./node_modules/.bin/eslint . --ignore-path ./.eslintignore --fix",
      "pretty:quick": "./node_modules/.bin/pretty-quick --staged",
      "lint:staged": "./node_modules/.bin/lint-staged",
      "test:unit": "mocha --require @babel/register --require ignore-styles test/*.spec.js",
      "clean": "rimraf dist",
      "build:rollup": "rollup -c",
      "build": "npm-run-all clean copy:types build:rollup",
      "build:watch": "rollup -c -w",
      "start": "npm-run-all clean build:watch",
      "gh-pages": "gh-pages -d example",
      "github-changes": "github-changes -o wwayne -r react-tooltip -a --only-pulls --use-commit-body",
      "copy:types": "cpy ./react-tooltip.d.ts ./dist --parents --dot",
      "cm": "git cz",
      "semantic-release": "semantic-release"
    },
    "config": {
      "commitizen": {
        "path": "node_modules/cz-conventional-changelog"
      }
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/wwayne/react-tooltip"
    },
    "keywords": [
      "react",
      "react-component",
      "tooltip",
      "react-tooltip"
    ],
    "author": {
      "name": "wwayne"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/wwayne/react-tooltip/issues"
    },
    "homepage": "https://github.com/wwayne/react-tooltip#readme",
    "browserify-shim": {
      "react": "global:React",
      "react-dom": "global:ReactDOM"
    },
    "peerDependencies": {
      "react": ">=16.0.0",
      "react-dom": ">=16.0.0"
    },
    "dependencies": {
      "prop-types": "^15.7.2",
      "uuid": "^7.0.3"
    },
    "devDependencies": {
      "@babel/cli": "^7.7.4",
      "@babel/core": "^7.7.4",
      "@babel/plugin-proposal-class-properties": "^7.8.3",
      "@babel/plugin-proposal-decorators": "^7.8.3",
      "@babel/plugin-proposal-object-rest-spread": "^7.0.0",
      "@babel/plugin-syntax-import-meta": "^7.8.3",
      "@babel/register": "^7.8.3",
      "@commitlint/cli": "^8.3.5",
      "@commitlint/config-conventional": "^8.2.0",
      "@commitlint/travis-cli": "^8.3.5",
      "@rollup/plugin-commonjs": "^11.0.2",
      "@rollup/plugin-node-resolve": "^7.1.1",
      "@semantic-release/changelog": "^5.0.0",
      "@semantic-release/commit-analyzer": "^8.0.1",
      "@semantic-release/git": "^9.0.0",
      "@semantic-release/npm": "^7.0.5",
      "@semantic-release/release-notes-generator": "^9.0.1",
      "@svgr/rollup": "^4.3.3",
      "@testing-library/react": "^11.0.4",
      "babel-eslint": "^4.1.1",
      "babel-loader": "v8.0.0-beta.0",
      "babelify": "^9.0.0",
      "browserify": "^13.0.0",
      "browserify-shim": "^3.8.12",
      "chai": "^4.2.0",
      "chai-enzyme": "^1.0.0-beta.1",
      "chai-spies": "^1.0.0",
      "commitizen": "2.9.6",
      "concurrently": "^2.1.0",
      "core-js": "^3.12.1",
      "cpy-cli": "^3.1.1",
      "cz-conventional-changelog": "^3.1.0",
      "enzyme": "^2.3.0",
      "enzyme-adapter-react-16": "^1.15.2",
      "eslint": "^6.8.0",
      "eslint-config-jss": "5.0.1",
      "eslint-config-prettier": "6.10.0",
      "eslint-config-standard": "^14.1.0",
      "eslint-config-standard-react": "^9.2.0",
      "eslint-plugin-import": "^2.18.2",
      "eslint-plugin-node": "^10.0.0",
      "eslint-plugin-prettier": "3.1.2",
      "eslint-plugin-promise": "^4.2.1",
      "eslint-plugin-react": "^7.16.0",
      "eslint-plugin-standard": "^4.0.1",
      "gh-pages": "1.1.0",
      "github-changes": "^1.1.2",
      "http-server": "^0.11.1",
      "husky": "^3.1.0",
      "ignore-styles": "5.0.1",
      "jsdom": "^16.4.0",
      "lint-staged": "^10.2.7",
      "mocha": "^8.1.3",
      "mocha-each": "^2.0.1",
      "mocha-jsdom": "^2.0.0",
      "npm-run-all": "^4.1.5",
      "postcss-nested": "^4.2.1",
      "postcss-simple-vars": "^5.0.2",
      "prettier": "1.19.1",
      "pretty-quick": "^2.0.1",
      "react": "^16.4.1",
      "react-addons-test-utils": "^15.1.0",
      "react-dom": "^16.4.1",
      "rimraf": "^3.0.0",
      "rollup": "^1.27.5",
      "rollup-plugin-babel": "^4.3.3",
      "rollup-plugin-eslint": "7.0.0",
      "rollup-plugin-peer-deps-external": "^2.2.0",
      "rollup-plugin-postcss": "^2.0.3",
      "rollup-plugin-sass": "^1.2.2",
      "rollup-plugin-stylelint": "1.0.0",
      "rollup-plugin-url": "^3.0.1",
      "sass": "^1.34.0",
      "semantic-release": "^17.0.4",
      "snazzy": "^2.0.1",
      "standard": "^5.2.2",
      "stylelint": "13.2.0",
      "stylelint-config-standard": "20.0.0",
      "uglifyjs": "^2.4.10",
      "watchify": "^3.11.1"
    },
    "files": [
      "dist"
    ],
    "release": {
      "plugins": [
        "@semantic-release/commit-analyzer",
        "@semantic-release/release-notes-generator",
        "@semantic-release/changelog",
        "@semantic-release/npm",
        "@semantic-release/git"
      ],
      "branch": "master"
    },
    "commitlint": {
      "extends": [
        "@commitlint/config-conventional"
      ]
    },
    "lint-staged": {
      "*.{js,ts}": "yarn eslint:fix"
    },
    "husky": {
      "hooks": {
        "pre-commit": "yarn pretest",
        "commit-msg": "commitlint -E HUSKY_GIT_PARAMS"
      }
    },
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-react-tooltip-4.2.21-840123ed86cf33d50ddde8ec8813b2960bfded7f-integrity/node_modules/react-tooltip/package.json",
    "readmeFilename": "README.md",
    "readme": "# react-tooltip\n\n[![Version](http://img.shields.io/npm/v/react-tooltip.svg)](https://www.npmjs.org/package/react-tooltip)\n[![code style: prettier](https://img.shields.io/badge/code_style-prettier-ff69b4.svg)](https://github.com/prettier/prettier)\n[![npm download][download-image]][download-url]\n[![Build Status](https://travis-ci.org/wwayne/react-tooltip.svg?branch=master)](https://travis-ci.org/wwayne/react-tooltip)\n[![semantic-release](https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg)](https://github.com/semantic-release/semantic-release)\n\n[download-image]: https://img.shields.io/npm/dm/react-tooltip.svg?style=flat-square\n[download-url]: https://npmjs.org/package/react-tooltip\n\n## Demo\n\n[![Edit ReactTooltip](https://codesandbox.io/static/img/play-codesandbox.svg)](https://codesandbox.io/s/heuristic-curran-bddeu?fontsize=14&hidenavigation=1&theme=dark)\n\nOr see it on [Github Page](https://wwayne.github.io/react-tooltip).\n\n## Maintainers\n\n[aronhelser](https://github.com/aronhelser) Passive maintainer - accepting PRs and doing minor testing, but not fixing issues or doing active development.\n\n[roggervalf](https://github.com/roggervalf) Active maintainer - accepting PRs and doing minor testing, fixing issues or doing active development.\n\n[huumanoid](https://github.com/huumanoid) (inactive)\n\nWe would gladly accept a new maintainer to help out!\n\n## Installation\n\n```sh\nnpm install react-tooltip\n```\n\nor\n\n```sh\nyarn add react-tooltip\n```\n\n## Usage\n\n### Using NPM\n\n1 . Require react-tooltip after installation\n\n```js\nimport ReactTooltip from 'react-tooltip';\n```\n\n2 . Add data-tip = \"your placeholder\" to your element\n\n```jsx\n<p data-tip=\"hello world\">Tooltip</p>\n```\n\n3 . Include react-tooltip component\n\n```jsx\n<ReactTooltip />\n```\n\n### Standalone\n\nYou can import `node_modules/react-tooltip/dist/index.js` into your page. Please make sure that you have already imported `react` and `react-dom` into your page.\n\n## Options\n\nNotes:\n\n- The tooltip sets `type: dark` `place: top` `effect: float` as **default** attributes. You don't have to add these options if you don't want to change the defaults\n- The option you set on `<ReactTooltip />` component will be implemented on every tooltip in a same page: `<ReactTooltip effect=\"solid\" />`\n- The option you set on a specific element, for example: `<a data-type=\"warning\"></a>` will only affect this specific tooltip\n\n| Global           | Specific              | Type          | Values                                                                                                                                | Description                                                                                                                                                                                         |\n| :--------------- | :-------------------- | :------------ | :------------------------------------------------------------------------------------------------------------------------------------ | :-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| place            | data-place            | String        | top, right, bottom, left                                                                                                              | placement                                                                                                                                                                                           |\n| type             | data-type             | String        | dark, success, warning, error, info, light                                                                                            | theme                                                                                                                                                                                               |\n| effect           | data-effect           | String        | float, solid                                                                                                                          | behaviour of tooltip                                                                                                                                                                                |\n| event            | data-event            | String        | e.g. click                                                                                                                            | custom event to trigger tooltip                                                                                                                                                                     |\n| eventOff         | data-event-off        | String        | e.g. click                                                                                                                            | custom event to hide tooltip (only makes effect after setting event attribute)                                                                                                                      |\n| globalEventOff   |                       | String        | e.g. click                                                                                                                            | global event to hide tooltip (global only)                                                                                                                                                          |\n| isCapture        | data-iscapture        | Bool          | true, false                                                                                                                           | when set to true, custom event's propagation mode will be capture                                                                                                                                   |\n| offset           | data-offset           | Object        | top, right, bottom, left                                                                                                              | `data-offset=\"{'top': 10, 'left': 10}\"` for specific and `offset={{top: 10, left: 10}}` for global                                                                                                  |\n| multiline        | data-multiline        | Bool          | true, false                                                                                                                           | support `<br>`, `<br />` to make multiline                                                                                                                                                          |\n| className        | data-class            | String        |                                                                                                                                       | extra custom class, can use !important to overwrite react-tooltip's default class                                                                                                                   |\n| html             | data-html             | Bool          | true, false                                                                                                                           | `<p data-tip=\"<p>HTML tooltip</p>\" data-html={true}></p>` or `<ReactTooltip html={true} />`, but see [Security Note](#security-note) below.                                                         |\n| delayHide        | data-delay-hide       | Number        |                                                                                                                                       | `<p data-tip=\"tooltip\" data-delay-hide='1000'></p>` or `<ReactTooltip delayHide={1000} />`                                                                                                          |\n| delayShow        | data-delay-show       | Number        |                                                                                                                                       | `<p data-tip=\"tooltip\" data-delay-show='1000'></p>` or `<ReactTooltip delayShow={1000} />`                                                                                                          |\n| delayUpdate      | data-delay-update     | Number        |                                                                                                                                       | `<p data-tip=\"tooltip\" data-delay-update='1000'></p>` or `<ReactTooltip delayUpdate={1000} />` Sets a delay in calling getContent if the tooltip is already shown and you mouse over another target |\n| insecure         | null                  | Bool          | true, false                                                                                                                           | Whether to inject the style header into the page dynamically (violates CSP style-src but is a convenient default)                                                                                   |\n| border           | data-border           | Bool          | true, false                                                                                                                           | Add one pixel white border                                                                                                                                                                          |\n| textColor        | data-text-color       | String        | e.g. red                                                                                                                              | Popup text color                                                                                                                                                                                    |\n| backgroundColor  | data-background-color | String        | e.g. yellow                                                                                                                           | Popup background color                                                                                                                                                                              |\n| borderColor      | data-border-color     | String        | e.g. green                                                                                                                            | Popup border color - enabled by the `border` value                                                                                                                                                  |\n| arrowColor       | data-arrow-color      | String        | e.g. #fff                                                                                                                             | Popup arrow color - if not specified, will use the `backgroundColor` value                                                                                                                          |\n| getContent       | null                  | Func or Array | (dataTip) => {}, [(dataTip) => {}, Interval]                                                                                          | Generate the tip content dynamically                                                                                                                                                                |\n| afterShow        | null                  | Func          | (evt) => {}                                                                                                                           | Function that will be called after tooltip show, with event that triggered show                                                                                                                     |\n| afterHide        | null                  | Func          | (evt) => {}                                                                                                                           | Function that will be called after tooltip hide, with event that triggered hide                                                                                                                     |\n| overridePosition | null                  | Func          | ({left:number, top: number}, currentEvent, currentTarget, node, place, desiredPlace, effect, offset) => ({left: number, top: number}) | Function that will replace tooltip position with custom one                                                                                                                                         |\n| disable          | data-tip-disable      | Bool          | true, false                                                                                                                           | Disable the tooltip behaviour, default is false                                                                                                                                                     |\n| scrollHide       | data-scroll-hide      | Bool          | true, false                                                                                                                           | Hide the tooltip when scrolling, default is true                                                                                                                                                    |\n| resizeHide       | null                  | Bool          | true, false                                                                                                                           | Hide the tooltip when resizing the window, default is true                                                                                                                                          |\n| wrapper          | null                  | String        | div, span                                                                                                                             | Selecting the wrapper element of the react tooltip, default is div                                                                                                                                  |\n| clickable        | null                  | Bool          | true, false                                                                                                                           | Enables tooltip to respond to mouse (or touch) events, default is false                                                                                                                             |\n\n### Security Note\n\nThe `html` option allows a tooltip to directly display raw HTML. This is a security risk if any of that content is supplied by the user. Any user-supplied content must be sanitized, using a package like [sanitize-html](https://www.npmjs.com/package/sanitize-html). We chose not to include sanitization after discovering it [increased our package size](https://github.com/wwayne/react-tooltip/issues/429) too much - we don't want to penalize people who don't use the `html` option.\n\n#### Note\n\n1. **data-tip** is necessary, because `<ReactTooltip />` finds the tooltip via this attribute\n2. **data-for** corresponds to the **id** of `<ReactTooltip />`\n3. When using react component as tooltip, you can have many `<ReactTooltip />` in a page but they should have different **id**s\n\n## Static Methods\n\n### ReactTooltip.hide(target)\n\n> Hide the tooltip manually, the target is optional, if no target passed in, all existing tooltips will be hidden\n\n```jsx\nimport ReactTooltip from 'react-tooltip'\n\n<p ref={ref => this.fooRef = ref} data-tip='tooltip'></p>\n<button onClick={() => { ReactTooltip.hide(this.fooRef) }}></button>\n<ReactTooltip />\n```\n\n### ReactTooltip.rebuild()\n\n> Rebinding all tooltips\n\n### ReactTooltip.show(target)\n\n> Show specific tooltip manually, for example:\n\n```jsx\nimport ReactTooltip from 'react-tooltip'\n\n<p ref={ref => this.fooRef = ref} data-tip='tooltip'></p>\n<button onClick={() => { ReactTooltip.show(this.fooRef) }}></button>\n<ReactTooltip />\n```\n\n## Troubleshooting\n\n### 1. Using tooltip within the modal (e.g. [react-modal](https://github.com/reactjs/react-modal))\n\nThe component was designed to set `<ReactTooltip />` once and then use tooltip everywhere, but a lot of people get stuck when using this component in a modal. You can read the discussion [here](https://github.com/wwayne/react-tooltip/issues/130). To solve this problem:\n\n1. Place `<ReactTooltip />` outside of the `<Modal>`\n2. Use `ReactTooltip.rebuild()` when opening the modal\n3. If your modal's z-index happens to be higher than the tooltip's, use the attribute `className` to custom your tooltip's z-index\n\n> I suggest always putting `<ReactTooltip />` in the Highest level or smart component of Redux, so you might need these static\n> method to control tooltip's behaviour in some situations\n\n### 2. Hide tooltip when getContent returns undefined\n\nWhen you set `getContent={() => { return }}` you will find the tooltip will display `true`. That's because React will set the value of data-\\* to be 'true' automatically if there is no value to be set. So you have to set `data-tip=''` in this situation.\n\n```jsx\n<p data-tip='' data-for='test'></p>\n<ReactTooltip id='test' getContent={() => { return null }}/>\n```\n\nSame for empty children, if you don't want show the tooltip when the children is empty\n\n```jsx\n<p data-tip='' data-for='test'></p>\n<ReactTooltip id='test'>{}</ReactTooltip>\n```\n\n### 3. Tooltip not binding to dynamic content\n\nWhen you render `<ReactTooltip>` ahead of dynamic content, and are using `data-for={id}` attributes \non new dynamic content, the tooltip will not register its event listener.  \n\nFor example, you render a generic tooltip in the root of your app, then load a list of content async.\nElements in the list use the `data-for={id}` attribute to bind the tooltip on hover.\nSince the tooltip has already scanned for data-tip these new elements will not trigger.\n\nOne workaround for this is to trigger `ReactTooltip.rebuild()` after the data load to scan for the attribute again, \nto allow event wireup.\n\n#### Example\n\n```jsx\n<app>\n  <ReactTooltip id=\"foo\" />\n  <list/>\n</app>\n```\n\n```jsx\n\nconst dynamicList = (props) => {\n\n useEffect(() => {\n        ReactTooltip.rebuild();\n    });\n\nreturn(\n  <list>\n    {data.map((item)=> {\n      <span data-for=\"foo\">My late bound tooltip triggered data</span>\n    });}\n  </list>\n);\n};\n\n```\n\n## Article\n\n[How I insert sass into react component](https://medium.com/@wwayne_me/how-i-insert-sass-into-my-npm-react-component-b46b9811c226#.gi4hxu44a)\n\n## Contributing\n\nWe welcome your contribution! Fork the repo, make some changes, submit a pull-request! Our [contributing](contributing.md) doc has some details.\n\n## License\n\nMIT\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2015 Wang Zixiao\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/react-tooltip/-/react-tooltip-4.2.21.tgz#840123ed86cf33d50ddde8ec8813b2960bfded7f",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/react-tooltip/-/react-tooltip-4.2.21.tgz",
    "hash": "840123ed86cf33d50ddde8ec8813b2960bfded7f",
    "integrity": "sha512-zSLprMymBDowknr0KVDiJ05IjZn9mQhhg4PRsqln0OZtURAJ1snt1xi5daZfagsh6vfsziZrc9pErPTDY1ACig==",
    "registry": "npm",
    "packageName": "react-tooltip",
    "cacheIntegrity": "sha512-zSLprMymBDowknr0KVDiJ05IjZn9mQhhg4PRsqln0OZtURAJ1snt1xi5daZfagsh6vfsziZrc9pErPTDY1ACig== sha1-hAEj7YbPM9UN3ejsiBOylgv97X8="
  },
  "registry": "npm",
  "hash": "840123ed86cf33d50ddde8ec8813b2960bfded7f"
}