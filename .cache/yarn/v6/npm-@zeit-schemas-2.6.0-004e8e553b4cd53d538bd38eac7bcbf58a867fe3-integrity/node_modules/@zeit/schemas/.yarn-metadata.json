{
  "manifest": {
    "name": "@zeit/schemas",
    "version": "2.6.0",
    "description": "All schemas used for validation that are shared between our projects",
    "scripts": {
      "test": "yarn run lint && best --verbose",
      "lint": "zeit-eslint --ext .jsx,.js .",
      "lint-staged": "git diff --diff-filter=ACMRT --cached --name-only '*.js' '*.jsx' | xargs zeit-eslint"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/zeit/schemas.git"
    },
    "author": {
      "name": "leo"
    },
    "license": "MIT",
    "devDependencies": {
      "@zeit/best": "0.4.3",
      "@zeit/eslint-config-node": "0.3.0",
      "@zeit/git-hooks": "0.1.4",
      "ajv": "6.5.1",
      "eslint": "4.19.1"
    },
    "eslintConfig": {
      "extends": [
        "@zeit/eslint-config-node"
      ]
    },
    "git": {
      "pre-commit": "lint-staged"
    },
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-@zeit-schemas-2.6.0-004e8e553b4cd53d538bd38eac7bcbf58a867fe3-integrity/node_modules/@zeit/schemas/package.json",
    "readmeFilename": "README.md",
    "readme": "# ZEIT's schemas\n\n[![Build Status](https://circleci.com/gh/zeit/schemas.svg?&style=shield)](https://circleci.com/gh/zeit/schemas)\n[![Join the community on Spectrum](https://withspectrum.github.io/badge/badge.svg)](https://spectrum.chat/zeit)\n\nThe schemas contained within this package are used all across the ZEIT ecosystem to validate config files, requests to APIs and more. It ensures users always send just the right data.\n\n## Why?\n\nIt is important that these schemas stay in sync between projects, so that the validations are always performed in the same way for the same kind of object.\n\nThe files located in this repository are `.js` and not `.json`, because parsing JSON takes a little bit longer.\n\n## Usage\n\nTo get started, pick one of the schemas in this repository and load it:\n\n```js\nconst schema = require('@zeit/schemas/deployment/config');\n```\n\nNext, set up [AJV](https://github.com/epoberezkin/ajv) (the validator) and run the schema through it:\n\n```js\nconst AJV = require('ajv');\n\nconst ajv = new AJV({ allErrors: true });\nconst isValid = ajv.validate(schema, <object-to-validate>);\n\nif (!isValid) {\n\tconsole.error(`The following entries are wrong: ${JSON.stringify(ajv.errors)}`);\n}\n```\n\nThat is all! :tada:\n\n## Contributing\n\n1. [Fork](https://help.github.com/articles/fork-a-repo/) this repository to your own GitHub account and then [clone](https://help.github.com/articles/cloning-a-repository/) it to your local device\n2. Link the package to the global module directory: `npm link`\n3. Within the module you want to test your local development instance of `@zeit/schemas`, just link it to the dependencies: `npm link @zeit/schemas` and load it!\n\n## Author\n\nLeo Lamprecht ([@notquiteleo](https://twitter.com/notquiteleo)) - [ZEIT](https://zeit.co)\n",
    "licenseText": "MIT License\n\nCopyright (c) 2018 ZEIT\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/@zeit/schemas/-/schemas-2.6.0.tgz#004e8e553b4cd53d538bd38eac7bcbf58a867fe3",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/@zeit/schemas/-/schemas-2.6.0.tgz",
    "hash": "004e8e553b4cd53d538bd38eac7bcbf58a867fe3",
    "integrity": "sha512-uUrgZ8AxS+Lio0fZKAipJjAh415JyrOZowliZAzmnJSsf7piVL5w+G0+gFJ0KSu3QRhvui/7zuvpLz03YjXAhg==",
    "registry": "npm",
    "packageName": "@zeit/schemas",
    "cacheIntegrity": "sha512-uUrgZ8AxS+Lio0fZKAipJjAh415JyrOZowliZAzmnJSsf7piVL5w+G0+gFJ0KSu3QRhvui/7zuvpLz03YjXAhg== sha1-AE6OVTtM1T1Ti9OOrHvL9YqGf+M="
  },
  "registry": "npm",
  "hash": "004e8e553b4cd53d538bd38eac7bcbf58a867fe3"
}