{
  "manifest": {
    "name": "koa-ip",
    "version": "2.1.0",
    "description": "Ip filter middleware for koa, support `whitelist` and `blacklist`.",
    "main": "index.js",
    "types": "index.d.ts",
    "scripts": {
      "test": "jest"
    },
    "author": {
      "name": "nswbmw"
    },
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "https://github.com/nswbmw/koa-ip"
    },
    "keywords": [
      "koa",
      "ip",
      "whitelist",
      "blacklist"
    ],
    "dependencies": {
      "debug": "4.1.1",
      "lodash.isplainobject": "4.0.6",
      "request-ip": "2.1.3"
    },
    "devDependencies": {
      "eslint-config-standard": "14.1.1",
      "eslint-plugin-import": "2.22.0",
      "eslint-plugin-jest": "23.20.0",
      "eslint-plugin-node": "11.1.0",
      "eslint-plugin-promise": "4.2.1",
      "eslint-plugin-standard": "4.0.1",
      "jest": "26.4.2",
      "koa": "2.13.0",
      "supertest": "4.0.2"
    },
    "jest": {
      "collectCoverage": true,
      "coverageReporters": [
        "json",
        "html"
      ]
    },
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-koa-ip-2.1.0-e684e8f8810a77321ee456c50d542216a4a9ccc1-integrity/node_modules/koa-ip/package.json",
    "readmeFilename": "readme.md",
    "readme": "## koa-ip\n\n<a href=\"https://communityinviter.com/apps/koa-js/koajs\" rel=\"KoaJs Slack Community\">![KoaJs Slack](https://img.shields.io/badge/Koa.Js-Slack%20Channel-Slack.svg?longCache=true&style=for-the-badge)</a> \n\n> koa-ip is a ip filter middleware for koa, support `whitelist` and `blacklist`.\n\n### Install\n\n```sh\n$ npm i koa-ip --save\nor \n$ yarn add koa-ip\n```\n\n### Usage\n\n```js\nip(String|RegExp)\nip(Array{String|RegExp})\nip({\n  whitelist: Array{String|RegExp},\n  blacklist: Array{String|RegExp},\n  handler: async (ctx, next) => {}// handle blacklist ip\n})\n```\n\n### Examples\n\n```js\nconst Koa = require('koa')\nconst ip = require('koa-ip')\n\nconst app = new Koa()\n\napp.use(ip('192.168.0.*'))// whitelist\n// app.use(ip(['192.168.0.*', '8.8.8.[0-3]']))// whitelist\n// app.use(ip({\n//   whitelist: ['192.168.0.*', '8.8.8.[0-3]'],\n//   blacklist: ['144.144.*']\n// }))\n\napp.listen(3000)\n```\n\n#### blacklist handler\n\n```js\nconst app = new Koa()\napp.use((ctx, next) => {\n  ctx.request.ip = '127.0.0.1'\n  return next()\n})\napp.use(ip({\n  blacklist: ['127.0.0.*'],\n  handler: async (ctx, next) => {\n    ctx.status = 403\n  }\n}))\n\napp.use((ctx, next) => {\n  ctx.status = 200\n})\n\napp.listen(3000)\n```\n\n**NB**: If missing blacklist handler, default `ctx.status = 403`.\n\nMore examples see [test](./__tests__/).\n\n### Test\n\n```sh\n$ npm test (coverage 100%)\nor\n$ yarn test (coverage 100%)\n```\n\n### License\n\nMIT\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/koa-ip/-/koa-ip-2.1.0.tgz#e684e8f8810a77321ee456c50d542216a4a9ccc1",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/koa-ip/-/koa-ip-2.1.0.tgz",
    "hash": "e684e8f8810a77321ee456c50d542216a4a9ccc1",
    "integrity": "sha512-3gpcu8i2YFR0jf8j98Mw2yUAglu3powVxFiYQGMe89n6JGGVIg6dv7zRMN+l8HF3wdiLseAfj2C97h+wlJAw4Q==",
    "registry": "npm",
    "packageName": "koa-ip",
    "cacheIntegrity": "sha512-3gpcu8i2YFR0jf8j98Mw2yUAglu3powVxFiYQGMe89n6JGGVIg6dv7zRMN+l8HF3wdiLseAfj2C97h+wlJAw4Q== sha1-5oTo+IEKdzIe5FbFDVQiFqSpzME="
  },
  "registry": "npm",
  "hash": "e684e8f8810a77321ee456c50d542216a4a9ccc1"
}