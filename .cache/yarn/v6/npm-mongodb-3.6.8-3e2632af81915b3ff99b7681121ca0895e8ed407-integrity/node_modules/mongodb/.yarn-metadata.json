{
  "manifest": {
    "name": "mongodb",
    "version": "3.6.8",
    "description": "The official MongoDB driver for Node.js",
    "main": "index.js",
    "files": [
      "index.js",
      "lib"
    ],
    "repository": {
      "type": "git",
      "url": "git@github.com:mongodb/node-mongodb-native.git"
    },
    "keywords": [
      "mongodb",
      "driver",
      "official"
    ],
    "peerDependenciesMeta": {
      "kerberos": {
        "optional": true
      },
      "mongodb-client-encryption": {
        "optional": true
      },
      "mongodb-extjson": {
        "optional": true
      },
      "snappy": {
        "optional": true
      },
      "bson-ext": {
        "optional": true
      },
      "aws4": {
        "optional": true
      }
    },
    "dependencies": {
      "bl": "^2.2.1",
      "bson": "^1.1.4",
      "denque": "^1.4.1",
      "optional-require": "^1.0.3",
      "safe-buffer": "^5.1.2"
    },
    "devDependencies": {
      "@types/chai": "^4.2.16",
      "@types/mocha": "^8.2.2",
      "@types/node": "^14.14.37",
      "array-includes": "^3.1.3",
      "chai": "^4.1.1",
      "chai-subset": "^1.6.0",
      "chalk": "^2.4.2",
      "co": "4.6.0",
      "eslint": "^7.10.0",
      "eslint-config-prettier": "^6.11.0",
      "eslint-plugin-es": "^3.0.1",
      "eslint-plugin-prettier": "^3.1.3",
      "jsdoc": "^3.5.5",
      "lodash.camelcase": "^4.3.0",
      "mocha": "5.2.0",
      "mocha-sinon": "^2.1.0",
      "mongodb-extjson": "^2.1.1",
      "mongodb-mock-server": "^1.0.1",
      "nyc": "^15.1.0",
      "object.entries": "^1.1.3",
      "prettier": "^1.19.1",
      "semver": "^5.5.0",
      "sinon": "^4.3.0",
      "sinon-chai": "^3.2.0",
      "snappy": "^6.3.4",
      "spec-xunit-file": "0.0.1-3",
      "standard-version": "^9.2.0",
      "tslib": "^2.2.0",
      "typescript": "^4.2.4",
      "util.promisify": "^1.0.1",
      "worker-farm": "^1.5.0",
      "wtfnode": "^0.8.0",
      "yargs": "^14.2.0"
    },
    "license": "Apache-2.0",
    "engines": {
      "node": ">=4"
    },
    "bugs": {
      "url": "https://github.com/mongodb/node-mongodb-native/issues"
    },
    "scripts": {
      "build:evergreen": "node .evergreen/generate_evergreen_tasks.js",
      "build:unified": "tsc -p test/functional/unified-spec-runner/tsconfig.unified.json",
      "check:atlas": "mocha --opts '{}' ./test/manual/atlas_connectivity.test.js",
      "check:bench": "node test/benchmarks/driverBench/",
      "check:coverage": "nyc npm run check:test",
      "check:kerberos": "mocha --opts '{}' -t 60000 test/manual/kerberos.test.js",
      "check:ldap": "mocha --opts '{}' test/manual/ldap.test.js",
      "check:lint": "eslint -v && eslint lib test",
      "check:test": "mocha --recursive test/functional test/unit",
      "check:tls": "mocha --opts '{}' test/manual/tls_support.test.js",
      "format": "npm run check:lint -- --fix",
      "release": "standard-version -i HISTORY.md",
      "test": "npm run lint && mocha --recursive test/functional test/unit"
    },
    "homepage": "https://github.com/mongodb/node-mongodb-native",
    "optionalDependencies": {
      "saslprep": "^1.0.0"
    },
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-mongodb-3.6.8-3e2632af81915b3ff99b7681121ca0895e8ed407-integrity/node_modules/mongodb/package.json",
    "readmeFilename": "README.md",
    "readme": "# MongoDB NodeJS Driver\n\n[![npm](https://nodei.co/npm/mongodb.png?downloads=true&downloadRank=true)](https://nodei.co/npm/mongodb/)\n\nThe official [MongoDB](https://www.mongodb.com/) driver for Node.js.\n\n**NOTE: v3.x released with breaking API changes. You can find a list of changes [here](CHANGES_3.0.0.md).**\n\n## Version 4.0\n\n**Looking for the latest?** We're working on the next major version of the driver, now in beta.\nCheck out our [beta version 4.0 here](https://github.com/mongodb/node-mongodb-native/tree/4.0), which includes a full migration of the driver to TypeScript.\n\n## Quick Links\n\n| what          | where                                                |\n| ------------- | ---------------------------------------------------- |\n| documentation | http://mongodb.github.io/node-mongodb-native         |\n| api-doc       | http://mongodb.github.io/node-mongodb-native/3.6/api |\n| source        | https://github.com/mongodb/node-mongodb-native       |\n| mongodb       | http://www.mongodb.org                               |\n\n### Bugs / Feature Requests\n\nThink you’ve found a bug? Want to see a new feature in `node-mongodb-native`? Please open a\ncase in our issue management tool, JIRA:\n\n- Create an account and login [jira.mongodb.org](https://jira.mongodb.org).\n- Navigate to the NODE project [jira.mongodb.org/browse/NODE](https://jira.mongodb.org/browse/NODE).\n- Click **Create Issue** - Please provide as much information as possible about the issue type and how to reproduce it.\n\nBug reports in JIRA for all driver projects (i.e. NODE, PYTHON, CSHARP, JAVA) and the\nCore Server (i.e. SERVER) project are **public**.\n\n### Support / Feedback\n\nFor issues with, questions about, or feedback for the Node.js driver, please look into our [support channels](https://docs.mongodb.com/manual/support). Please do not email any of the driver developers directly with issues or questions - you're more likely to get an answer on the [MongoDB Community Forums](https://community.mongodb.com/tags/c/drivers-odms-connectors/7/node-js-driver).\n\n### Change Log\n\nChange history can be found in [`HISTORY.md`](HISTORY.md).\n\n### Compatibility\n\nFor version compatibility matrices, please refer to the following links:\n\n- [MongoDB](https://docs.mongodb.com/ecosystem/drivers/driver-compatibility-reference/#reference-compatibility-mongodb-node)\n- [NodeJS](https://docs.mongodb.com/ecosystem/drivers/driver-compatibility-reference/#reference-compatibility-language-node)\n\n## Installation\n\nThe recommended way to get started using the Node.js driver is by using `npm` (Node Package Manager) to install the dependency in your project.\n\n## MongoDB Driver\n\nGiven that you have created your own project using `npm init` we install the MongoDB driver and its dependencies by executing the following `npm` command.\n\n```bash\nnpm install mongodb --save\n```\n\nThis will download the MongoDB driver and add a dependency entry in your `package.json` file.\n\nYou can also use the [Yarn](https://yarnpkg.com/en) package manager.\n\n## Troubleshooting\n\nThe MongoDB driver depends on several other packages. These are:\n\n- [bson](https://github.com/mongodb/js-bson)\n- [bson-ext](https://github.com/mongodb-js/bson-ext)\n- [kerberos](https://github.com/mongodb-js/kerberos)\n- [mongodb-client-encryption](https://github.com/mongodb/libmongocrypt#readme)\n\nThe `kerberos` package is a C++ extension that requires a build environment to be installed on your system. You must be able to build Node.js itself in order to compile and install the `kerberos` module. Furthermore, the `kerberos` module requires the MIT Kerberos package to correctly compile on UNIX operating systems. Consult your UNIX operation system package manager for what libraries to install.\n\n**Windows already contains the SSPI API used for Kerberos authentication. However, you will need to install a full compiler tool chain using Visual Studio C++ to correctly install the Kerberos extension.**\n\n### Diagnosing on UNIX\n\nIf you don’t have the build-essentials, this module won’t build. In the case of Linux, you will need gcc, g++, Node.js with all the headers and Python. The easiest way to figure out what’s missing is by trying to build the Kerberos project. You can do this by performing the following steps.\n\n```bash\ngit clone https://github.com/mongodb-js/kerberos\ncd kerberos\nnpm install\n```\n\nIf all the steps complete, you have the right toolchain installed. If you get the error \"node-gyp not found,\" you need to install `node-gyp` globally:\n\n```bash\nnpm install -g node-gyp\n```\n\nIf it correctly compiles and runs the tests you are golden. We can now try to install the `mongod` driver by performing the following command.\n\n```bash\ncd yourproject\nnpm install mongodb --save\n```\n\nIf it still fails the next step is to examine the npm log. Rerun the command but in this case in verbose mode.\n\n```bash\nnpm --loglevel verbose install mongodb\n```\n\nThis will print out all the steps npm is performing while trying to install the module.\n\n### Diagnosing on Windows\n\nA compiler tool chain known to work for compiling `kerberos` on Windows is the following.\n\n- Visual Studio C++ 2010 (do not use higher versions)\n- Windows 7 64bit SDK\n- Python 2.7 or higher\n\nOpen the Visual Studio command prompt. Ensure `node.exe` is in your path and install `node-gyp`.\n\n```bash\nnpm install -g node-gyp\n```\n\nNext, you will have to build the project manually to test it. Clone the repo, install dependencies and rebuild:\n\n```bash\ngit clone https://github.com/christkv/kerberos.git\ncd kerberos\nnpm install\nnode-gyp rebuild\n```\n\nThis should rebuild the driver successfully if you have everything set up correctly.\n\n### Other possible issues\n\nYour Python installation might be hosed making gyp break. Test your deployment environment first by trying to build Node.js itself on the server in question, as this should unearth any issues with broken packages (and there are a lot of broken packages out there).\n\nAnother tip is to ensure your user has write permission to wherever the Node.js modules are being installed.\n\n## Quick Start\n\nThis guide will show you how to set up a simple application using Node.js and MongoDB. Its scope is only how to set up the driver and perform the simple CRUD operations. For more in-depth coverage, see the [tutorials](docs/reference/content/tutorials/main.md).\n\n### Create the `package.json` file\n\nFirst, create a directory where your application will live.\n\n```bash\nmkdir myproject\ncd myproject\n```\n\nEnter the following command and answer the questions to create the initial structure for your new project:\n\n```bash\nnpm init\n```\n\nNext, install the driver dependency.\n\n```bash\nnpm install mongodb --save\n```\n\nYou should see **NPM** download a lot of files. Once it's done you'll find all the downloaded packages under the **node_modules** directory.\n\n### Start a MongoDB Server\n\nFor complete MongoDB installation instructions, see [the manual](https://docs.mongodb.org/manual/installation/).\n\n1. Download the right MongoDB version from [MongoDB](https://www.mongodb.org/downloads)\n2. Create a database directory (in this case under **/data**).\n3. Install and start a `mongod` process.\n\n```bash\nmongod --dbpath=/data\n```\n\nYou should see the **mongod** process start up and print some status information.\n\n### Connect to MongoDB\n\nCreate a new **app.js** file and add the following code to try out some basic CRUD\noperations using the MongoDB driver.\n\nAdd code to connect to the server and the database **myproject**:\n\n```js\nconst MongoClient = require('mongodb').MongoClient;\nconst assert = require('assert');\n\n// Connection URL\nconst url = 'mongodb://localhost:27017';\n\n// Database Name\nconst dbName = 'myproject';\nconst client = new MongoClient(url);\n// Use connect method to connect to the server\nclient.connect(function(err) {\n  assert.equal(null, err);\n  console.log('Connected successfully to server');\n\n  const db = client.db(dbName);\n\n  client.close();\n});\n```\n\nRun your app from the command line with:\n\n```bash\nnode app.js\n```\n\nThe application should print **Connected successfully to server** to the console.\n\n### Insert a Document\n\nAdd to **app.js** the following function which uses the **insertMany**\nmethod to add three documents to the **documents** collection.\n\n```js\nconst insertDocuments = function(db, callback) {\n  // Get the documents collection\n  const collection = db.collection('documents');\n  // Insert some documents\n  collection.insertMany([{ a: 1 }, { a: 2 }, { a: 3 }], function(err, result) {\n    assert.equal(err, null);\n    assert.equal(3, result.result.n);\n    assert.equal(3, result.ops.length);\n    console.log('Inserted 3 documents into the collection');\n    callback(result);\n  });\n};\n```\n\nThe **insert** command returns an object with the following fields:\n\n- **result** Contains the result document from MongoDB\n- **ops** Contains the documents inserted with added **\\_id** fields\n- **connection** Contains the connection used to perform the insert\n\nAdd the following code to call the **insertDocuments** function:\n\n```js\nconst MongoClient = require('mongodb').MongoClient;\nconst assert = require('assert');\n\n// Connection URL\nconst url = 'mongodb://localhost:27017';\n\n// Database Name\nconst dbName = 'myproject';\n\n// Use connect method to connect to the server\nMongoClient.connect(url, function(err, client) {\n  assert.equal(null, err);\n  console.log('Connected successfully to server');\n\n  const db = client.db(dbName);\n\n  insertDocuments(db, function() {\n    client.close();\n  });\n});\n```\n\nRun the updated **app.js** file:\n\n```bash\nnode app.js\n```\n\nThe operation returns the following output:\n\n```bash\nConnected successfully to server\nInserted 3 documents into the collection\n```\n\n### Find All Documents\n\nAdd a query that returns all the documents.\n\n```js\nconst findDocuments = function(db, callback) {\n  // Get the documents collection\n  const collection = db.collection('documents');\n  // Find some documents\n  collection.find({}).toArray(function(err, docs) {\n    assert.equal(err, null);\n    console.log('Found the following records');\n    console.log(docs);\n    callback(docs);\n  });\n};\n```\n\nThis query returns all the documents in the **documents** collection. Add the **findDocument** method to the **MongoClient.connect** callback:\n\n```js\nconst MongoClient = require('mongodb').MongoClient;\nconst assert = require('assert');\n\n// Connection URL\nconst url = 'mongodb://localhost:27017';\n\n// Database Name\nconst dbName = 'myproject';\n\n// Use connect method to connect to the server\nMongoClient.connect(url, function(err, client) {\n  assert.equal(null, err);\n  console.log('Connected correctly to server');\n\n  const db = client.db(dbName);\n\n  insertDocuments(db, function() {\n    findDocuments(db, function() {\n      client.close();\n    });\n  });\n});\n```\n\n### Find Documents with a Query Filter\n\nAdd a query filter to find only documents which meet the query criteria.\n\n```js\nconst findDocuments = function(db, callback) {\n  // Get the documents collection\n  const collection = db.collection('documents');\n  // Find some documents\n  collection.find({ a: 3 }).toArray(function(err, docs) {\n    assert.equal(err, null);\n    console.log('Found the following records');\n    console.log(docs);\n    callback(docs);\n  });\n};\n```\n\nOnly the documents which match `'a' : 3` should be returned.\n\n### Update a document\n\nThe following operation updates a document in the **documents** collection.\n\n```js\nconst updateDocument = function(db, callback) {\n  // Get the documents collection\n  const collection = db.collection('documents');\n  // Update document where a is 2, set b equal to 1\n  collection.updateOne({ a: 2 }, { $set: { b: 1 } }, function(err, result) {\n    assert.equal(err, null);\n    assert.equal(1, result.result.n);\n    console.log('Updated the document with the field a equal to 2');\n    callback(result);\n  });\n};\n```\n\nThe method updates the first document where the field **a** is equal to **2** by adding a new field **b** to the document set to **1**. Next, update the callback function from **MongoClient.connect** to include the update method.\n\n```js\nconst MongoClient = require('mongodb').MongoClient;\nconst assert = require('assert');\n\n// Connection URL\nconst url = 'mongodb://localhost:27017';\n\n// Database Name\nconst dbName = 'myproject';\n\n// Use connect method to connect to the server\nMongoClient.connect(url, function(err, client) {\n  assert.equal(null, err);\n  console.log('Connected successfully to server');\n\n  const db = client.db(dbName);\n\n  insertDocuments(db, function() {\n    updateDocument(db, function() {\n      client.close();\n    });\n  });\n});\n```\n\n### Remove a document\n\nRemove the document where the field **a** is equal to **3**.\n\n```js\nconst removeDocument = function(db, callback) {\n  // Get the documents collection\n  const collection = db.collection('documents');\n  // Delete document where a is 3\n  collection.deleteOne({ a: 3 }, function(err, result) {\n    assert.equal(err, null);\n    assert.equal(1, result.result.n);\n    console.log('Removed the document with the field a equal to 3');\n    callback(result);\n  });\n};\n```\n\nAdd the new method to the **MongoClient.connect** callback function.\n\n```js\nconst MongoClient = require('mongodb').MongoClient;\nconst assert = require('assert');\n\n// Connection URL\nconst url = 'mongodb://localhost:27017';\n\n// Database Name\nconst dbName = 'myproject';\n\n// Use connect method to connect to the server\nMongoClient.connect(url, function(err, client) {\n  assert.equal(null, err);\n  console.log('Connected successfully to server');\n\n  const db = client.db(dbName);\n\n  insertDocuments(db, function() {\n    updateDocument(db, function() {\n      removeDocument(db, function() {\n        client.close();\n      });\n    });\n  });\n});\n```\n\n### Index a Collection\n\n[Indexes](https://docs.mongodb.org/manual/indexes/) can improve your application's\nperformance. The following function creates an index on the **a** field in the\n**documents** collection.\n\n```js\nconst indexCollection = function(db, callback) {\n  db.collection('documents').createIndex({ a: 1 }, null, function(err, results) {\n    console.log(results);\n    callback();\n  });\n};\n```\n\nAdd the `indexCollection` method to your app:\n\n```js\nconst MongoClient = require('mongodb').MongoClient;\nconst assert = require('assert');\n\n// Connection URL\nconst url = 'mongodb://localhost:27017';\n\nconst dbName = 'myproject';\n\n// Use connect method to connect to the server\nMongoClient.connect(url, function(err, client) {\n  assert.equal(null, err);\n  console.log('Connected successfully to server');\n\n  const db = client.db(dbName);\n\n  insertDocuments(db, function() {\n    indexCollection(db, function() {\n      client.close();\n    });\n  });\n});\n```\n\nFor more detailed information, see the [tutorials](docs/reference/content/tutorials/main.md).\n\n## Next Steps\n\n- [MongoDB Documentation](http://mongodb.org)\n- [Read about Schemas](http://learnmongodbthehardway.com)\n- [Star us on GitHub](https://github.com/mongodb/node-mongodb-native)\n\n## License\n\n[Apache 2.0](LICENSE.md)\n\n© 2009-2012 Christian Amor Kvalheim\n© 2012-present MongoDB [Contributors](CONTRIBUTORS.md)\n",
    "licenseText": "Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License."
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/mongodb/-/mongodb-3.6.8.tgz#3e2632af81915b3ff99b7681121ca0895e8ed407",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/mongodb/-/mongodb-3.6.8.tgz",
    "hash": "3e2632af81915b3ff99b7681121ca0895e8ed407",
    "integrity": "sha512-sDjJvI73WjON1vapcbyBD3Ao9/VN3TKYY8/QX9EPbs22KaCSrQ5rXo5ZZd44tWJ3wl3FlnrFZ+KyUtNH6+1ZPQ==",
    "registry": "npm",
    "packageName": "mongodb",
    "cacheIntegrity": "sha512-sDjJvI73WjON1vapcbyBD3Ao9/VN3TKYY8/QX9EPbs22KaCSrQ5rXo5ZZd44tWJ3wl3FlnrFZ+KyUtNH6+1ZPQ== sha1-PiYyr4GRWz/5m3aBEhygiV6O1Ac="
  },
  "registry": "npm",
  "hash": "3e2632af81915b3ff99b7681121ca0895e8ed407"
}