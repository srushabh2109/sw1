{
  "manifest": {
    "name": "byte-size",
    "author": {
      "name": "Lloyd Brookes",
      "email": "75pound@gmail.com"
    },
    "contributors": [
      {
        "name": "Raul Perez",
        "email": "repejota@gmail.com",
        "url": "http://repejota.com"
      }
    ],
    "version": "7.0.1",
    "main": "dist/index.js",
    "license": "MIT",
    "engines": {
      "node": ">=10"
    },
    "description": "Convert a bytes or octets value (e.g. 34565346) to a human-readable string ('34.6 MB'). Choose between metric or IEC units.",
    "repository": {
      "type": "git",
      "url": "https://github.com/75lb/byte-size"
    },
    "files": [
      "index.mjs",
      "dist/index.js"
    ],
    "keywords": [
      "convert",
      "bytes",
      "octet",
      "size",
      "human",
      "readable",
      "metric",
      "IEC"
    ],
    "scripts": {
      "test": "npm run dist && npm run test:esm && npm run test:web",
      "test:esm": "esm-runner test.mjs",
      "test:web": "web-runner test.mjs",
      "docs": "jsdoc2md -t README.hbs dist/index.js > README.md",
      "cover": "c8 npm test && c8 report --reporter=text-lcov | coveralls",
      "dist": "rollup -f umd -n byteSize -o dist/index.js index.mjs"
    },
    "devDependencies": {
      "@test-runner/web": "^0.3.5",
      "coveralls": "^3.1.0",
      "esm-runner": "^0.3.4",
      "isomorphic-assert": "^0.1.1",
      "jsdoc-to-markdown": "^7.0.0",
      "rollup": "^2.40.0",
      "test-object-model": "^0.6.1"
    },
    "standard": {
      "ignore": [
        "dist"
      ]
    },
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-byte-size-7.0.1-b1daf3386de7ab9d706b941a748dbfc71130dee3-integrity/node_modules/byte-size/package.json",
    "readmeFilename": "README.hbs",
    "readme": "[![view on npm](https://badgen.net/npm/v/byte-size)](https://www.npmjs.org/package/byte-size)\n[![npm module downloads](https://badgen.net/npm/dt/byte-size)](https://www.npmjs.org/package/byte-size)\n[![Gihub repo dependents](https://badgen.net/github/dependents-repo/75lb/byte-size)](https://github.com/75lb/byte-size/network/dependents?dependent_type=REPOSITORY)\n[![Gihub package dependents](https://badgen.net/github/dependents-pkg/75lb/byte-size)](https://github.com/75lb/byte-size/network/dependents?dependent_type=PACKAGE)\n[![Build Status](https://travis-ci.org/75lb/byte-size.svg?branch=master)](https://travis-ci.org/75lb/byte-size)\n[![Coverage Status](https://coveralls.io/repos/github/75lb/byte-size/badge.svg)](https://coveralls.io/github/75lb/byte-size)\n[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg)](https://github.com/feross/standard)\n\n***Upgraders, please check the [release notes](https://github.com/75lb/byte-size/releases).***\n\n# byte-size\n\nAn isomorphic, load-anywhere function to convert a bytes value (e.g. `3456`) to a human-readable string (`'3.5 kB'`). Choose between [metric or IEC units](https://en.wikipedia.org/wiki/Gigabyte) (summarised below) or specify your own custom units.\n\nValue  | Metric        | Metric (octet) |\n-----  | ------------- | -------------- |\n1000   | kB  kilobyte  | ko  kilooctet  |\n1000^2 | MB  megabyte  | Mo  megaoctet  |\n1000^3 | GB  gigabyte  | Go  gigaoctet  |\n1000^4 | TB  terabyte  | To  teraoctet  |\n1000^5 | PB  petabyte  | Po  petaoctet  |\n1000^6 | EB  exabyte   | Eo  exaoctet   |\n1000^7 | ZB  zettabyte | Zo  zettaoctet |\n1000^8 | YB  yottabyte | Yo  yottaoctet |\n\nValue  | IEC          | IEC (octet)   |\n------ | ------------ | ------------- |\n1024   | KiB kibibyte | Kio kibioctet |\n1024^2 | MiB mebibyte | Mio mebioctet |\n1024^3 | GiB gibibyte | Gio gibioctet |\n1024^4 | TiB tebibyte | Tio tebioctet |\n1024^5 | PiB pebibyte | Pio pebioctet |\n1024^6 | EiB exbibyte | Eio exbioctet |\n1024^7 | ZiB zebibyte | Zio zebioctet |\n1024^8 | YiB yobibyte | Yio yobioctet |\n\n## Synopsis\n\nBy default, `byteSize` converts the input number to a human readable string with metric units and a precision of 1.\n\n```js\n> const byteSize = require('byte-size')\n\n> byteSize(1580)\n{ value: '1.6', unit: 'kB', long: 'kilobytes' }\n```\n\nThe object returned by `byteSize` defines a `toString` method therefore can be used directly in string context.\n\n```js\n> `Filesize: ${byteSize(12400)}`\n'Filesize: 12.4 kB'\n```\n\nOverride the default `toString` behaviour by setting [`options.toStringFn`](#bytesizebytes-options--object-).\n\n```js\n> function toStringFn () {\n  return `**${this.value}${this.unit}**`\n}\n\n> `Filesize: ${byteSize(12400, { toStringFn })}`\n'Filesize: **12.4kB**'\n```\n\nBeside the default of `metric`, there are three other built-in units available: `metric_octet`, `iec` and `iec_octet`.\n\n```js\n> byteSize(1580, { units: 'iec' })\n{ value: '1.5', unit: 'KiB', long: 'kibibytes' }\n\n> byteSize(1580, { units: 'iec_octet' })\n{ value: '1.5', unit: 'Kio', long: 'kibioctets' }\n\n> byteSize(1580, { units: 'metric_octet' })\n{ value: '1.6', unit: 'ko', long: 'kilooctets' }\n```\n\nYou can adjust the `precision`.\n\n```js\n> byteSize(1580, { units: 'iec', precision: 3 })\n{ value: '1.543', unit: 'KiB', long: 'kibibytes' }\n\n> byteSize(1580, { units: 'iec', precision: 0 })\n{ value: '2', unit: 'KiB', long: 'kibibytes' }\n```\n\nDefine custom units by passing an object containing one or more additional conversion tables to `options.customUnits`. In `options.units`, specify the name of a property from the `customUnits` object.\n\n```js\n> const customUnits = {\n  simple: [\n    { from: 0   , to: 1e3 , unit: ''  },\n    { from: 1e3 , to: 1e6 , unit: 'K', long: 'thousand' },\n    { from: 1e6 , to: 1e9 , unit: 'Mn', long: 'million' },\n    { from: 1e9 , to: 1e12, unit: 'Bn', long: 'billion' }\n  ]\n}\n\n> const { value, unit } = byteSize(10000, { customUnits, units: 'simple' })\n\n> `${value}${unit}`\n'10.0K'\n```\n\nOverride the built-in defaults for the duration of the process by passing an options object to `byteSize.defaultOptions()`. This results in cleaner code in cases where `byteSize` is used often with the same options.\n\n```js\n> byteSize.defaultOptions({\n  units: 'simple',\n  precision: 2,\n  customUnits: {\n    simple: [\n      { from: 0, to: 1e3, unit: '' },\n      { from: 1e3, to: 1e6, unit: 'k' },\n      { from: 1e6, to: 1e9, unit: 'm' },\n      { from: 1e9, to: 1e12, unit: 'bn' },\n    ]\n  },\n  toStringFn: function () {\n    return this.value + this.unit\n  }\n})\n\n> [2400, 16400, 3991200].map(byteSize).join(', ')\n'2.40k, 16.40k, 3.99m'\n```\n\n{{>main}}\n\n## Load anywhere\n\nThis library is compatible with Node.js, the Web and any style of module loader. It can be loaded anywhere, natively without transpilation.\n\nNode.js:\n\n```js\nconst byteSize = require('byte-size')\n```\n\nWithin Node.js with ECMAScript Module support enabled:\n\n```js\nimport byteSize from 'byte-size'\n```\n\nWithin a modern browser ECMAScript Module:\n\n```js\nimport byteSize from './node_modules/byte-size/index.mjs'\n```\n\nOld browser (adds `window.byteSize`):\n\n```html\n<script nomodule src=\"./node_modules/byte-size/dist/index.js\"></script>\n```\n\n* * *\n\n&copy; 2014-21 Lloyd Brookes \\<75pound@gmail.com\\>.\n\nIsomorphic test suite by [test-runner](https://github.com/test-runner-js/test-runner) and [web-runner](https://github.com/test-runner-js/web-runner). Documented by [jsdoc-to-markdown](https://github.com/jsdoc2md/jsdoc-to-markdown).\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2014-21 Lloyd Brookes <75pound@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/byte-size/-/byte-size-7.0.1.tgz#b1daf3386de7ab9d706b941a748dbfc71130dee3",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/byte-size/-/byte-size-7.0.1.tgz",
    "hash": "b1daf3386de7ab9d706b941a748dbfc71130dee3",
    "integrity": "sha512-crQdqyCwhokxwV1UyDzLZanhkugAgft7vt0qbbdt60C6Zf3CAiGmtUCylbtYwrU6loOUw3euGrNtW1J651ot1A==",
    "registry": "npm",
    "packageName": "byte-size",
    "cacheIntegrity": "sha512-crQdqyCwhokxwV1UyDzLZanhkugAgft7vt0qbbdt60C6Zf3CAiGmtUCylbtYwrU6loOUw3euGrNtW1J651ot1A== sha1-sdrzOG3nq51wa5QadI2/xxEw3uM="
  },
  "registry": "npm",
  "hash": "b1daf3386de7ab9d706b941a748dbfc71130dee3"
}