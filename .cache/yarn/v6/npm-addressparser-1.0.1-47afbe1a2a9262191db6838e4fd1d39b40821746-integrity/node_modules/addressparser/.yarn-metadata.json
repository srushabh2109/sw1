{
  "manifest": {
    "name": "addressparser",
    "version": "1.0.1",
    "description": "Parse e-mail addresses",
    "main": "lib/addressparser.js",
    "repository": {
      "type": "git",
      "url": "https://github.com/andris9/addressparser.git"
    },
    "author": {
      "name": "Andris Reinman"
    },
    "license": "MIT",
    "scripts": {
      "test": "grunt"
    },
    "devDependencies": {
      "chai": "^3.5.0",
      "grunt": "^0.4.5",
      "grunt-eslint": "^17.3.1",
      "grunt-mocha-test": "^0.12.7",
      "mocha": "^2.4.5"
    },
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-addressparser-1.0.1-47afbe1a2a9262191db6838e4fd1d39b40821746-integrity/node_modules/addressparser/package.json",
    "readmeFilename": "README.md",
    "readme": "# addressparser\n\nParse e-mail address fields. Input can be a single address (`\"andris@kreata.ee\"`), a formatted address (`\"Andris Reinman <andris@kreata.ee>\"`), comma separated list of addresses (`\"andris@kreata.ee, andris.reinman@kreata.ee\"`), an address group (`\"disclosed-recipients:andris@kreata.ee;\"`) or a mix of all the formats.\n\nIn addition to comma the semicolon is treated as the list delimiter as well (except when used in the group syntax), so a value `\"andris@kreata.ee; andris.reinman@kreata.ee\"` is identical to `\"andris@kreata.ee, andris.reinman@kreata.ee\"`.\n\n## Installation\n\nInstall with npm\n\n```\nnpm install addressparser\n```\n\n## Usage\n\nInclude the module\n\n```javascript\nvar addressparser = require('addressparser');\n```\n\nParse some address strings with `addressparser(field)`\n\n```javascript\nvar addresses = addressparser('andris <andris@tr.ee>');\nconsole.log(addresses); // [{name: \"andris\", address:\"andris@tr.ee\"}]\n```\n\nAnd when using groups\n\n```javascript\naddressparser('Composers:\"Bach, Sebastian\" <sebu@example.com>, mozart@example.com (Mozzie);');\n```\n\nthe result would be\n\n```\n[\n    {\n        name: \"Composers\",\n        group: [\n            {\n                address: \"sebu@example.com\",\n                name: \"Bach, Sebastian\"\n            },\n            {\n                address: \"mozart@example.com\",\n                name: \"Mozzie\"\n            }\n        ]\n    }\n]\n```\n\n> Be prepared though that groups might be nested.\n\n## Notes\n\nThis module does not decode any mime-word or punycode encoded strings, it is only a basic parser for parsing the base data, you need to decode the encoded parts later by yourself\n\n## License\n\n**MIT**",
    "licenseText": "Copyright (c) 2014-2016 Andris Reinman\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/addressparser/-/addressparser-1.0.1.tgz#47afbe1a2a9262191db6838e4fd1d39b40821746",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/addressparser/-/addressparser-1.0.1.tgz",
    "hash": "47afbe1a2a9262191db6838e4fd1d39b40821746",
    "integrity": "sha1-R6++GiqSYhkdtoOOT9HTm0CCF0Y=",
    "registry": "npm",
    "packageName": "addressparser",
    "cacheIntegrity": "sha512-aQX7AISOMM7HFE0iZ3+YnD07oIeJqWGVnJ+ZIKaBZAk03ftmVYVqsGas/rbXKR21n4D/hKCSHypvcyOkds/xzg== sha1-R6++GiqSYhkdtoOOT9HTm0CCF0Y="
  },
  "registry": "npm",
  "hash": "47afbe1a2a9262191db6838e4fd1d39b40821746"
}