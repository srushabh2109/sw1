{
  "manifest": {
    "name": "dottie",
    "version": "2.0.2",
    "devDependencies": {
      "chai": "^4.2.0",
      "mocha": "^5.2.0"
    },
    "license": "MIT",
    "files": [
      "dottie.js"
    ],
    "description": "Fast and safe nested object access and manipulation in JavaScript",
    "author": {
      "name": "Mick Hansen",
      "email": "maker@mhansen.io"
    },
    "repository": {
      "type": "git",
      "url": "git://github.com/mickhansen/dottie.js.git"
    },
    "main": "dottie.js",
    "scripts": {
      "test": "mocha -t 5000 -s 100 --reporter spec test"
    },
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-dottie-2.0.2-cc91c0726ce3a054ebf11c55fbc92a7f266dd154-integrity/node_modules/dottie/package.json",
    "readmeFilename": "README.md",
    "readme": "[![Build Status](https://travis-ci.org/mickhansen/dottie.js.svg?branch=master)](https://travis-ci.org/mickhansen/dottie.js)\n\nDottie helps you easily (and without sacrificing too much performance) look up and play with nested keys in objects, without them throwing up in your face.\n\n## Install\n    npm install dottie\n\n## Usage\nFor detailed usage, check source or tests.\n\n### Get value\nGets nested value, or undefined if unreachable, or a default value if passed.\n\n```js\nvar values = {\n  some: {\n    nested: {\n        key: 'foobar';\n    }\n  },\n  'some.dot.included': {\n    key: 'barfoo'\n  }\n}\n\ndottie.get(values, 'some.nested.key'); // returns 'foobar'\ndottie.get(values, 'some.undefined.key'); // returns undefined\ndottie.get(values, 'some.undefined.key', 'defaultval'); // returns 'defaultval'\ndottie.get(values, ['some.dot.included', 'key']); // returns 'barfoo'\n```\n\n*Note: lodash.get() also works fine for this* \n\n### Set value\nSets nested value, creates nested structure if needed\n\n```js\ndottie.set(values, 'some.nested.value', someValue);\ndottie.set(values, ['some.dot.included', 'value'], someValue);\ndottie.set(values, 'some.nested.object', someValue, {\n  force: true // force overwrite defined non-object keys into objects if needed\n});\n```\n\n### Transform object\nTransform object from keys with dottie notation to nested objects\n\n```js\nvar values = {\n  'user.name': 'Gummy Bear',\n  'user.email': 'gummybear@candymountain.com',\n  'user.professional.title': 'King',\n  'user.professional.employer': 'Candy Mountain'\n};\nvar transformed = dottie.transform(values);\n\n/*\n{\n  user: {\n    name: 'Gummy Bear',\n    email: 'gummybear@candymountain.com',\n    professional: {\n      title: 'King',\n      employer: 'Candy Mountain'\n    }\n  }\n}\n*/\n```\n\n#### With a custom delimiter\n\n```js\nvar values = {\n  'user_name': 'Mick Hansen',\n  'user_email': 'maker@mhansen.io'\n};\nvar transformed = dottie.transform(values, { delimiter: '_' });\n\n/*\n{\n  user: {\n    name: 'Mick Hansen',\n    email: 'maker@mhansen.io'\n  }\n}\n*/\n```\n\n### Get paths in object\n```js\nvar object = {\n  a: 1,\n  b: {\n    c: 2,\n    d: { e: 3 }\n  }\n};\n\ndottie.paths(object); // [\"a\", \"b.c\", \"b.d.e\"];\n```\n\n## Performance\n\n`0.3.1` and up ships with `dottie.memoizePath: true` by default, if this causes any bugs, please try setting it to false\n\n## License\n\n[MIT](https://github.com/mickhansen/dottie.js/blob/master/LICENSE)\n",
    "licenseText": "The MIT License\n\nCopyright (c) 2013-2014 Mick Hansen. http://mhansen.io\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/dottie/-/dottie-2.0.2.tgz#cc91c0726ce3a054ebf11c55fbc92a7f266dd154",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/dottie/-/dottie-2.0.2.tgz",
    "hash": "cc91c0726ce3a054ebf11c55fbc92a7f266dd154",
    "integrity": "sha512-fmrwR04lsniq/uSr8yikThDTrM7epXHBAAjH9TbeH3rEA8tdCO7mRzB9hdmdGyJCxF8KERo9CITcm3kGuoyMhg==",
    "registry": "npm",
    "packageName": "dottie",
    "cacheIntegrity": "sha512-fmrwR04lsniq/uSr8yikThDTrM7epXHBAAjH9TbeH3rEA8tdCO7mRzB9hdmdGyJCxF8KERo9CITcm3kGuoyMhg== sha1-zJHAcmzjoFTr8RxV+8kqfyZt0VQ="
  },
  "registry": "npm",
  "hash": "cc91c0726ce3a054ebf11c55fbc92a7f266dd154"
}