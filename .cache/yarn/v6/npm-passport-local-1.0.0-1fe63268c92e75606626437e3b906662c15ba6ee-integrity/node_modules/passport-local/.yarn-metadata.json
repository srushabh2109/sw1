{
  "manifest": {
    "name": "passport-local",
    "version": "1.0.0",
    "description": "Local username and password authentication strategy for Passport.",
    "keywords": [
      "passport",
      "local",
      "auth",
      "authn",
      "authentication",
      "username",
      "password"
    ],
    "author": {
      "name": "Jared Hanson",
      "email": "jaredhanson@gmail.com",
      "url": "http://www.jaredhanson.net/"
    },
    "repository": {
      "type": "git",
      "url": "git://github.com/jaredhanson/passport-local.git"
    },
    "bugs": {
      "url": "http://github.com/jaredhanson/passport-local/issues"
    },
    "licenses": [
      {
        "type": "MIT",
        "url": "http://www.opensource.org/licenses/MIT"
      }
    ],
    "main": "./lib",
    "dependencies": {
      "passport-strategy": "1.x.x"
    },
    "devDependencies": {
      "mocha": "1.x.x",
      "chai": "1.x.x",
      "chai-passport-strategy": "0.1.x"
    },
    "engines": {
      "node": ">= 0.4.0"
    },
    "scripts": {
      "test": "node_modules/.bin/mocha --reporter spec --require test/bootstrap/node test/*.test.js"
    },
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-passport-local-1.0.0-1fe63268c92e75606626437e3b906662c15ba6ee-integrity/node_modules/passport-local/package.json",
    "readmeFilename": "README.md",
    "readme": "# passport-local\n\n[![Build](https://travis-ci.org/jaredhanson/passport-local.png)](https://travis-ci.org/jaredhanson/passport-local)\n[![Coverage](https://coveralls.io/repos/jaredhanson/passport-local/badge.png)](https://coveralls.io/r/jaredhanson/passport-local)\n[![Quality](https://codeclimate.com/github/jaredhanson/passport-local.png)](https://codeclimate.com/github/jaredhanson/passport-local)\n[![Dependencies](https://david-dm.org/jaredhanson/passport-local.png)](https://david-dm.org/jaredhanson/passport-local)\n[![Tips](http://img.shields.io/gittip/jaredhanson.png)](https://www.gittip.com/jaredhanson/)\n\n\n[Passport](http://passportjs.org/) strategy for authenticating with a username\nand password.\n\nThis module lets you authenticate using a username and password in your Node.js\napplications.  By plugging into Passport, local authentication can be easily and\nunobtrusively integrated into any application or framework that supports\n[Connect](http://www.senchalabs.org/connect/)-style middleware, including\n[Express](http://expressjs.com/).\n\n## Install\n\n    $ npm install passport-local\n\n## Usage\n\n#### Configure Strategy\n\nThe local authentication strategy authenticates users using a username and\npassword.  The strategy requires a `verify` callback, which accepts these\ncredentials and calls `done` providing a user.\n\n    passport.use(new LocalStrategy(\n      function(username, password, done) {\n        User.findOne({ username: username }, function (err, user) {\n          if (err) { return done(err); }\n          if (!user) { return done(null, false); }\n          if (!user.verifyPassword(password)) { return done(null, false); }\n          return done(null, user);\n        });\n      }\n    ));\n\n#### Authenticate Requests\n\nUse `passport.authenticate()`, specifying the `'local'` strategy, to\nauthenticate requests.\n\nFor example, as route middleware in an [Express](http://expressjs.com/)\napplication:\n\n    app.post('/login', \n      passport.authenticate('local', { failureRedirect: '/login' }),\n      function(req, res) {\n        res.redirect('/');\n      });\n\n## Examples\n\nFor complete, working examples, refer to the multiple [examples](https://github.com/jaredhanson/passport-local/tree/master/examples) included.\n\n## Tests\n\n    $ npm install\n    $ npm test\n\n## Credits\n\n  - [Jared Hanson](http://github.com/jaredhanson)\n\n## License\n\n[The MIT License](http://opensource.org/licenses/MIT)\n\nCopyright (c) 2011-2014 Jared Hanson <[http://jaredhanson.net/](http://jaredhanson.net/)>\n",
    "license": "MIT",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2011-2014 Jared Hanson\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/passport-local/-/passport-local-1.0.0.tgz#1fe63268c92e75606626437e3b906662c15ba6ee",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/passport-local/-/passport-local-1.0.0.tgz",
    "hash": "1fe63268c92e75606626437e3b906662c15ba6ee",
    "integrity": "sha1-H+YyaMkudWBmJkN+O5BmYsFbpu4=",
    "registry": "npm",
    "packageName": "passport-local",
    "cacheIntegrity": "sha512-9wCE6qKznvf9mQYYbgJ3sVOHmCWoUNMVFoZzNoznmISbhnNNPhN9xfY3sLmScHMetEJeoY7CXwfhCe7argfQow== sha1-H+YyaMkudWBmJkN+O5BmYsFbpu4="
  },
  "registry": "npm",
  "hash": "1fe63268c92e75606626437e3b906662c15ba6ee"
}