{
  "manifest": {
    "name": "stream-to-array",
    "description": "Concatenate a readable stream's data into a single array",
    "version": "2.3.0",
    "author": {
      "name": "Jonathan Ong",
      "email": "me@jongleberry.com",
      "url": "http://jongleberry.com"
    },
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "https://github.com/stream-utils/stream-to-array.git"
    },
    "dependencies": {
      "any-promise": "^1.1.0"
    },
    "devDependencies": {
      "bluebird": "^3.1.1",
      "istanbul": "^0.4.2",
      "mocha": "^2.3.3"
    },
    "scripts": {
      "test": "mocha --reporter spec --bail",
      "test-cov": "istanbul cover node_modules/mocha/bin/_mocha -- --reporter dot",
      "test-travis": "istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --reporter dot"
    },
    "files": [
      "index.js"
    ],
    "keywords": [
      "stream",
      "streams",
      "buffer",
      "array",
      "concat"
    ],
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-stream-to-array-2.3.0-bbf6b39f5f43ec30bc71babcb37557acecf34353-integrity/node_modules/stream-to-array/package.json",
    "readmeFilename": "README.md",
    "readme": "# Stream to Array\n\n[![NPM version][npm-image]][npm-url]\n[![Build status][travis-image]][travis-url]\n[![Test coverage][coveralls-image]][coveralls-url]\n[![Dependency Status][david-image]][david-url]\n[![License][license-image]][license-url]\n[![Downloads][downloads-image]][downloads-url]\n\nConcatenate a readable stream's data into a single array.\n\nYou may also be interested in:\n\n- [raw-body](https://github.com/stream-utils/raw-body) for strings\n\n## API\n\n```js\nvar toArray = require('stream-to-array')\n```\n\n### toArray([stream], [callback(err, arr)])\n\nReturns all the data objects in an array.\nThis is useful for streams in object mode if you want to just use an array.\n\n```js\nvar stream = new Stream.Readable()\ntoArray(stream, function (err, arr) {\n  assert.ok(Array.isArray(arr))\n})\n```\n\nIf `stream` is not defined, it is assumed that `this` is a stream.\n\n```js\nvar stream = new Stream.Readable()\nstream.toArray = toArray\nstream.toArray(function (err, arr) {\n\n})\n```\n\nIf `callback` is not defined, then it returns a promise.\n\n```js\ntoArray(stream)\n  .then(function (parts) {\n\n  })\n```\n\nIf you want to return a buffer, just use `Buffer.concat(arr)`\n\n```js\ntoArray(stream)\n  .then(function (parts) {\n    var buffers = []\n    for (var i = 0, l = parts.length; i < l ; ++i) {\n      var part = parts[i]\n      buffers.push((part instanceof Buffer) ? part : new Buffer(part))\n    }\n    return Buffer.concat(buffers)\n  })\n```\n\n[npm-image]: https://img.shields.io/npm/v/stream-to-array.svg?style=flat-square\n[npm-url]: https://npmjs.org/package/stream-to-array\n[github-tag]: http://img.shields.io/github/tag/stream-utils/stream-to-array.svg?style=flat-square\n[github-url]: https://github.com/stream-utils/stream-to-array/tags\n[travis-image]: https://img.shields.io/travis/stream-utils/stream-to-array.svg?style=flat-square\n[travis-url]: https://travis-ci.org/stream-utils/stream-to-array\n[coveralls-image]: https://img.shields.io/coveralls/stream-utils/stream-to-array.svg?style=flat-square\n[coveralls-url]: https://coveralls.io/r/stream-utils/stream-to-array?branch=master\n[david-image]: http://img.shields.io/david/stream-utils/stream-to-array.svg?style=flat-square\n[david-url]: https://david-dm.org/stream-utils/stream-to-array\n[license-image]: http://img.shields.io/npm/l/stream-to-array.svg?style=flat-square\n[license-url]: LICENSE\n[downloads-image]: http://img.shields.io/npm/dm/stream-to-array.svg?style=flat-square\n[downloads-url]: https://npmjs.org/package/stream-to-array\n",
    "licenseText": "\nThe MIT License (MIT)\n\nCopyright (c) 2014 Jonathan Ong me@jongleberry.com\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/stream-to-array/-/stream-to-array-2.3.0.tgz#bbf6b39f5f43ec30bc71babcb37557acecf34353",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/stream-to-array/-/stream-to-array-2.3.0.tgz",
    "hash": "bbf6b39f5f43ec30bc71babcb37557acecf34353",
    "integrity": "sha1-u/azn19D7DC8cbq8s3VXrOzzQ1M=",
    "registry": "npm",
    "packageName": "stream-to-array",
    "cacheIntegrity": "sha512-UsZtOYEn4tWU2RGLOXr/o/xjRBftZRlG3dEWoaHr8j4GuypJ3isitGbVyjQKAuMu+xbiop8q224TjiZWc4XTZA== sha1-u/azn19D7DC8cbq8s3VXrOzzQ1M="
  },
  "registry": "npm",
  "hash": "bbf6b39f5f43ec30bc71babcb37557acecf34353"
}