{
  "manifest": {
    "name": "react-copy-to-clipboard",
    "version": "5.0.3",
    "description": "Copy-to-clipboard React component",
    "main": "lib/index.js",
    "config": {
      "component": "CopyToClipboard",
      "externals": {
        "react": "React",
        "react-dom": "ReactDOM"
      },
      "include": [
        "https://unpkg.com/react/umd/react.production.min.js",
        "https://unpkg.com/react-dom/umd/react-dom.production.min.js"
      ]
    },
    "scripts": {
      "build": "yarn lib && yarn dist",
      "start": "NODE_ENV=development webpack-dev-server --config ./webpack/dev.config.js",
      "predist": "rm -rf ./build",
      "dist": "NODE_ENV=production webpack-cli --config ./webpack/dist.config.js && NODE_ENV=production webpack-cli --config ./webpack/min.config.js",
      "preghPages": "yarn pub",
      "ghPages": "gh-pages --dist ./pub --repo git@github.com:nkbt/react-copy-to-clipboard.git --user nik@butenko.me --branch gh-pages --message 'Publish examples' ",
      "prelib": "rm -rf ./lib",
      "lib": "NODE_ENV=production babel src --out-dir lib",
      "lint": "eslint .",
      "prepub": "rm -rf ./pub",
      "pub": "NODE_ENV=production webpack-cli --config ./webpack/pub.config.js",
      "test": "node test/Component-test.js",
      "prepublishOnly": "yarn build",
      "postversion": "git push --follow-tags",
      "nuke": "rm -rf node_modules yarn.lock",
      "postnuke": "yarn install",
      "deps": "! depcheck --specials=bin,eslint --ignore-dirs=build,lib,pub | grep --invert-match 'No depcheck issue'"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/nkbt/react-copy-to-clipboard.git"
    },
    "keywords": [
      "component",
      "react-component",
      "react",
      "copy to clipboard",
      "clipboard"
    ],
    "author": {
      "name": "Nik Butenko",
      "email": "nik@butenko.me"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/nkbt/react-copy-to-clipboard/issues"
    },
    "homepage": "https://github.com/nkbt/react-copy-to-clipboard",
    "peerDependencies": {
      "react": "^15.3.0 || ^16.0.0 || ^17.0.0"
    },
    "dependencies": {
      "copy-to-clipboard": "^3",
      "prop-types": "^15.5.8"
    },
    "devDependencies": {
      "@babel/cli": "^7.0.0",
      "@babel/core": "^7.0.0",
      "@babel/plugin-proposal-class-properties": "^7.0.0",
      "@babel/plugin-proposal-object-rest-spread": "^7.0.0",
      "@babel/preset-env": "^7.0.0",
      "@babel/preset-react": "^7.0.0",
      "@babel/register": "^7.0.0",
      "babel-eslint": "^10.0.3",
      "babel-loader": "^8.0.0",
      "babel-plugin-transform-react-remove-prop-types": "^0.4.24",
      "css-loader": "^3.2.0",
      "depcheck": "^0.9.0",
      "eslint": "^6.4.0",
      "eslint-config-airbnb": "^18.0.1",
      "eslint-plugin-import": "^2.18.2",
      "eslint-plugin-jsx-a11y": "^6.2.3",
      "eslint-plugin-react": "^7.14.3",
      "eslint-plugin-react-hooks": "^1.7.0",
      "gh-pages": "^2.1.1",
      "html-webpack-plugin": "^3.2.0",
      "html-webpack-tags-plugin": "^2.0.17",
      "mini-css-extract-plugin": "^0.8.0",
      "react": "^17.0.1",
      "react-dom": "^17.0.1",
      "style-loader": "^1.0.0",
      "tape": "^4.11.0",
      "webpack": "^4.41.0",
      "webpack-cli": "^3.3.9",
      "webpack-dev-server": "^3.8.1"
    },
    "files": [
      "build",
      "lib",
      "src",
      "LICENSE",
      "package.json",
      "README.md"
    ],
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-react-copy-to-clipboard-5.0.3-2a0623b1115a1d8c84144e9434d3342b5af41ab4-integrity/node_modules/react-copy-to-clipboard/package.json",
    "readmeFilename": "README.md",
    "readme": "# react-copy-to-clipboard [![npm](https://img.shields.io/npm/v/react-copy-to-clipboard.svg?style=flat-square)](https://www.npmjs.com/package/react-copy-to-clipboard)\n\n[![Gitter](https://img.shields.io/gitter/room/nkbt/help.svg?style=flat-square)](https://gitter.im/nkbt/help)\n\n[![CircleCI](https://img.shields.io/circleci/project/nkbt/react-copy-to-clipboard.svg?style=flat-square&label=nix-build)](https://circleci.com/gh/nkbt/react-copy-to-clipboard)\n[![Dependencies](https://img.shields.io/david/nkbt/react-copy-to-clipboard.svg?style=flat-square)](https://david-dm.org/nkbt/react-copy-to-clipboard)\n[![Dev Dependencies](https://img.shields.io/david/dev/nkbt/react-copy-to-clipboard.svg?style=flat-square)](https://david-dm.org/nkbt/react-copy-to-clipboard#info=devDependencies)\n\nCopy to clipboard React component\n\nBased on [copy-to-clipboard](https://npm.im/copy-to-clipboard)\n\n> Would try to use execCommand with fallback to IE specific clipboardData interface and finally, fallback to simple prompt with proper text content & 'Copy to clipboard: Ctrl+C, Enter'\n\n\n![Copy to clipboard](example/copy-to-clipboard.gif)\n\n\n## Installation\n\n### NPM\n\n```sh\nnpm install --save react-copy-to-clipboard\n```\n\nDon't forget to manually install peer dependencies (`react`) if you use npm@3.\n\n\n### 1998 Script Tag:\n```html\n<script src=\"https://unpkg.com/react@16.0.0/umd/react.production.min.js\"></script>\n<script src=\"https://unpkg.com/react-copy-to-clipboard/build/react-copy-to-clipboard.js\"></script>\n(Module exposed as `CopyToClipboard`)\n```\n\n\n## Demo\n\n[http://nkbt.github.io/react-copy-to-clipboard](http://nkbt.github.io/react-copy-to-clipboard)\n\n## Codepen demo\n\n[http://codepen.io/nkbt/pen/eNPoQv](http://codepen.io/nkbt/pen/eNPoQv?editors=0010)\n\n## Usage\n```js\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\n\nclass App extends React.Component {\n  state = {\n    value: '',\n    copied: false,\n  };\n\n  render() {\n    return (\n      <div>\n        <input value={this.state.value}\n          onChange={({target: {value}}) => this.setState({value, copied: false})} />\n\n        <CopyToClipboard text={this.state.value}\n          onCopy={() => this.setState({copied: true})}>\n          <span>Copy to clipboard with span</span>\n        </CopyToClipboard>\n\n        <CopyToClipboard text={this.state.value}\n          onCopy={() => this.setState({copied: true})}>\n          <button>Copy to clipboard with button</button>\n        </CopyToClipboard>\n\n        {this.state.copied ? <span style={{color: 'red'}}>Copied.</span> : null}\n      </div>\n    );\n  }\n}\n\nconst appRoot = document.createElement('div');\ndocument.body.appendChild(appRoot);\nReactDOM.render(<App />, appRoot);\n```\n\n## Options\n\n\n#### `text`: PropTypes.string.isRequired\n\nText to be copied to clipboard\n\n\n#### `onCopy`: PropTypes.func\n\nOptional callback, will be called when text is copied\n\n```\nonCopy(text, result)\n```\n`result (bool)`: Returns `true` if copied successfully, else `false`.\n\n\n#### `options`: PropTypes.shape({debug: bool, message: string})\n\nOptional [copy-to-clipboard](https://npm.im/copy-to-clipboard) options.\n\nSee [API docs](https://npm.im/copy-to-clipboard#api) for details\n\n#### `children`: PropTypes.node.isRequired\n\nCopyToClipboard is a simple wrapping component, it does not render any tags, so it requires the only child element to be present, which will be used to capture clicks.\n\n```js\n<CopyToClipboard text=\"Hello!\">\n  <button>Copy to clipboard</button>\n</CopyToClipboard>\n```\n\n## Development and testing\n\nCurrently is being developed and tested with the latest stable `Node 8` on `OSX`.\n\nTo run example covering all `CopyToClipboard` features, use `yarn start`, which will compile `example/Example.js`\n\n```bash\ngit clone git@github.com:nkbt/react-copy-to-clipboard.git\ncd react-copy-to-clipboard\nyarn install\nyarn start\n\n# then\nopen http://localhost:8080\n```\n\n## Tests\n\n```bash\n# to run ESLint check\nyarn lint\n\n# to run tests\nyarn test\n\n# to run end-to-end tests\n# first, run `selenium/standalone-firefox:3.4.0` docker image\ndocker run -p 4444:4444 selenium/standalone-firefox:3.4.0\n# then run test\nyarn e2e\n```\n\n## License\n\nMIT\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2016 Nik Butenko\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/react-copy-to-clipboard/-/react-copy-to-clipboard-5.0.3.tgz#2a0623b1115a1d8c84144e9434d3342b5af41ab4",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/react-copy-to-clipboard/-/react-copy-to-clipboard-5.0.3.tgz",
    "hash": "2a0623b1115a1d8c84144e9434d3342b5af41ab4",
    "integrity": "sha512-9S3j+m+UxDZOM0Qb8mhnT/rMR0NGSrj9A/073yz2DSxPMYhmYFBMYIdI2X4o8AjOjyFsSNxDRnCX6s/gRxpriw==",
    "registry": "npm",
    "packageName": "react-copy-to-clipboard",
    "cacheIntegrity": "sha512-9S3j+m+UxDZOM0Qb8mhnT/rMR0NGSrj9A/073yz2DSxPMYhmYFBMYIdI2X4o8AjOjyFsSNxDRnCX6s/gRxpriw== sha1-KgYjsRFaHYyEFE6UNNM0K1r0GrQ="
  },
  "registry": "npm",
  "hash": "2a0623b1115a1d8c84144e9434d3342b5af41ab4"
}