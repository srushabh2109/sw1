{
  "manifest": {
    "name": "@emotion/cache",
    "version": "11.4.0",
    "description": "emotion's cache",
    "main": "dist/emotion-cache.cjs.js",
    "module": "dist/emotion-cache.esm.js",
    "browser": {
      "./dist/emotion-cache.cjs.js": "./dist/emotion-cache.browser.cjs.js",
      "./dist/emotion-cache.esm.js": "./dist/emotion-cache.browser.esm.js"
    },
    "types": "types/index.d.ts",
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "https://github.com/emotion-js/emotion/tree/main/packages/cache"
    },
    "scripts": {
      "test:typescript": "dtslint types"
    },
    "dependencies": {
      "@emotion/memoize": "^0.7.4",
      "@emotion/sheet": "^1.0.0",
      "@emotion/utils": "^1.0.0",
      "@emotion/weak-memoize": "^0.2.5",
      "stylis": "^4.0.3"
    },
    "devDependencies": {
      "@emotion/hash": "*",
      "dtslint": "^0.3.0"
    },
    "publishConfig": {
      "access": "public"
    },
    "files": [
      "src",
      "dist",
      "types/*.d.ts"
    ],
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-@emotion-cache-11.4.0-293fc9d9a7a38b9aad8e9337e5014366c3b09ac0-integrity/node_modules/@emotion/cache/package.json",
    "readmeFilename": "README.md",
    "readme": "# @emotion/cache\n\n### createCache\n\n`createCache` allows for low level customization of how styles get inserted by emotion. It's intended to be used with the [`<CacheProvider/>`](https://emotion.sh/docs/cache-provider) component to override the default cache, which is created with sensible defaults for most applications.\n\n```javascript\nimport createCache from '@emotion/cache'\n\nexport const myCache = createCache({\n  key: 'my-prefix-key',\n  stylisPlugins: [\n    /* your plugins here */\n  ]\n})\n```\n\n### Primary use cases\n\n- Using emotion in embedded contexts such as an `<iframe/>`\n\n- Setting a [nonce](#nonce-string) on any `<style/>` tag emotion creates for security purposes\n\n- Using emotion with a developer defined `<style/>` tag\n\n- Using emotion with custom Stylis plugins\n\n## Options\n\n### `nonce`\n\n`string`\n\nA nonce that will be set on each style tag that emotion inserts for [Content Security Policies](https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP).\n\n### `stylisPlugins`\n\n`Array<Function>`\n\nA Stylis plugins that will be run by Stylis during preprocessing. [Read the Stylis docs to find out more](https://github.com/thysultan/stylis.js#middleware). This can be used for many purposes such as RTL.\n\n> Note:\n>\n> Prefixer is just a plugin which happens to be put in default `stylisPlugins`. If you plan to use custom `stylisPlugins` and you want to have your styles prefixed automatically you must include prefixer in your custom `stylisPlugins`. You can import `prefixer` from the `stylis` module to do that (`import { prefixer } from 'stylis'`);\n\n### `key`\n\n`string (Pattern: [^a-z-])`\n\nThe prefix before class names. It will also be set as the value of the `data-emotion` attribute on the style tags that emotion inserts and it's used in the attribute name that marks style elements in `renderStylesToString` and `renderStylesToNodeStream`. This is **required if using multiple emotion caches in the same app**.\n\n### `container`\n\n`HTMLElement`\n\nA DOM node that emotion will insert all of its style tags into. This is useful for inserting styles into iframes.\n\n### `prepend`\n\n`boolean`\n\nA boolean representing whether to prepend rather than append style tags into the specified container DOM node.\n",
    "licenseText": "MIT License\n\nCopyright (c) Emotion team and other contributors\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/@emotion/cache/-/cache-11.4.0.tgz#293fc9d9a7a38b9aad8e9337e5014366c3b09ac0",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/@emotion/cache/-/cache-11.4.0.tgz",
    "hash": "293fc9d9a7a38b9aad8e9337e5014366c3b09ac0",
    "integrity": "sha512-Zx70bjE7LErRO9OaZrhf22Qye1y4F7iDl+ITjet0J+i+B88PrAOBkKvaAWhxsZf72tDLajwCgfCjJ2dvH77C3g==",
    "registry": "npm",
    "packageName": "@emotion/cache",
    "cacheIntegrity": "sha512-Zx70bjE7LErRO9OaZrhf22Qye1y4F7iDl+ITjet0J+i+B88PrAOBkKvaAWhxsZf72tDLajwCgfCjJ2dvH77C3g== sha1-KT/J2aeji5qtjpM35QFDZsOwmsA="
  },
  "registry": "npm",
  "hash": "293fc9d9a7a38b9aad8e9337e5014366c3b09ac0"
}