{
  "manifest": {
    "name": "koa-compress",
    "description": "Compress middleware for koa",
    "version": "5.0.1",
    "author": {
      "name": "Jonathan Ong",
      "email": "me@jongleberry.com",
      "url": "http://jongleberry.com"
    },
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "https://github.com/koajs/compress.git"
    },
    "dependencies": {
      "bytes": "^3.0.0",
      "compressible": "^2.0.0",
      "http-errors": "^1.7.3",
      "koa-is-json": "^1.0.0",
      "statuses": "^2.0.0"
    },
    "devDependencies": {
      "eslint": "^6.0.0",
      "eslint-config-standard": "^14.1.1",
      "eslint-plugin-import": "^2.9.0",
      "eslint-plugin-node": "^11.0.0",
      "eslint-plugin-promise": "^4.0.0",
      "eslint-plugin-standard": "^4.0.1",
      "jest": "^25.3.0",
      "koa": "^2.0.1",
      "supertest": "^4.0.2"
    },
    "scripts": {
      "eslint": "eslint --ignore-path .gitignore .",
      "test": "jest"
    },
    "files": [
      "lib",
      "LICENSE",
      "HISTORY.md"
    ],
    "main": "lib",
    "jest": {
      "testEnvironment": "node"
    },
    "engines": {
      "node": ">= 8.0.0"
    },
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-koa-compress-5.0.1-9e89e2847998f8f9f73a5674e5739a2f4b6531fc-integrity/node_modules/koa-compress/package.json",
    "readmeFilename": "README.md",
    "readme": "# Koa Compress\n\n[![Node.js CI](https://github.com/koajs/compress/workflows/Node.js%20CI/badge.svg?branch=master)](https://github.com/koajs/compress/actions?query=workflow%3A%22Node.js+CI%22+branch%3Amaster)\n[![codecov](https://codecov.io/gh/koajs/compress/branch/master/graph/badge.svg)](https://codecov.io/gh/koajs/compress)\n\nCompress middleware for Koa\n\n## Example\n\n```js\nconst compress = require('koa-compress')\nconst Koa = require('koa')\n\nconst app = new Koa()\napp.use(compress({\n  filter (content_type) {\n  \treturn /text/i.test(content_type)\n  },\n  threshold: 2048,\n  gzip: {\n    flush: require('zlib').constants.Z_SYNC_FLUSH\n  },\n  deflate: {\n    flush: require('zlib').constants.Z_SYNC_FLUSH,\n  },\n  br: false // disable brotli\n}))\n```\n\n## Options\n\n### filter\\<Function\\>\n\n```ts\nfunction (mimeType: string): Boolean {\n\n}\n```\n\nAn optional function that checks the response content type to decide whether to compress.\nBy default, it uses [compressible](https://github.com/jshttp/compressible).\n\n### options.threshold\\<String|Number\\>\n\nMinimum response size in bytes to compress.\nDefault `1024` bytes or `1kb`.\n\n### options[encoding]\\<Object\\>\n\nThe current encodings are, in order of preference: `br`, `gzip`, `deflate`.\nSetting `options[encoding] = {}` will pass those options to the encoding function.\nSetting `options[encoding] = false` will disable that encoding.\n\n#### options<span></span>.br\n\n[Brotli compression](https://en.wikipedia.org/wiki/Brotli) is supported in node v11.7.0+, which includes it natively.\n\n### options.defaultEncoding\\<String\\>\n\nAn optional string, which specifies what encoders to use for requests without\n[Accept-Encoding](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Accept-Encoding).\nDefault `idenity`.\n\nThe standard dictates to treat such requests as `*` meaning that all compressions are permissible,\nyet it causes very practical problems when debugging servers with manual tools like `curl`, `wget`, and so on.\nIf you want to enable the standard behavior, just set `defaultEncoding` to `*`.\n\n## Manually turning compression on and off\n\nYou can always enable compression by setting `ctx.compress = true`.\nYou can always disable compression by setting `ctx.compress = false`.\nThis bypasses the filter check.\n\n```js\napp.use((ctx, next) => {\n  ctx.compress = true\n  ctx.body = fs.createReadStream(file)\n})\n```\n",
    "licenseText": "\nThe MIT License (MIT)\n\nCopyright (c) 2014 Jonathan Ong me@jongleberry.com\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/koa-compress/-/koa-compress-5.0.1.tgz#9e89e2847998f8f9f73a5674e5739a2f4b6531fc",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/koa-compress/-/koa-compress-5.0.1.tgz",
    "hash": "9e89e2847998f8f9f73a5674e5739a2f4b6531fc",
    "integrity": "sha512-uTo7Hcyyt6e9o2X3htRS/SNEKy9vDOUc/r1qs/F0YI2Frv9IEbkjz/9dC6IdJWBQAG34lRuU7jBXeq3DRur9Ng==",
    "registry": "npm",
    "packageName": "koa-compress",
    "cacheIntegrity": "sha512-uTo7Hcyyt6e9o2X3htRS/SNEKy9vDOUc/r1qs/F0YI2Frv9IEbkjz/9dC6IdJWBQAG34lRuU7jBXeq3DRur9Ng== sha1-nonihHmY+Pn3OlZ05XOaL0tlMfw="
  },
  "registry": "npm",
  "hash": "9e89e2847998f8f9f73a5674e5739a2f4b6531fc"
}