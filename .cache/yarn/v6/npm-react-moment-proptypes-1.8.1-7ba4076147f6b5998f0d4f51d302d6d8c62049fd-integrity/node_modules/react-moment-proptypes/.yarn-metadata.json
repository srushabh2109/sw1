{
  "manifest": {
    "name": "react-moment-proptypes",
    "version": "1.8.1",
    "description": "React proptype for moment module",
    "keywords": [
      "moment",
      "react",
      "props",
      "proptypes"
    ],
    "main": "./src/index.js",
    "repository": {
      "type": "git",
      "url": "git@github.com:CalebMorris/react-moment-proptypes.git"
    },
    "scripts": {
      "coveralls": "nyc report --reporter=text-lcov | coveralls",
      "test": "./node_modules/.bin/mocha --recursive --require @babel/register --require ./test/suppress-fallback-warning.js --require ./test/require-enzyme-adapter.js",
      "test-all": "npm run test-1.6 && npm run test-1.7 && npm run test-latest",
      "test-1.6": "rm -Rf ./node_modules/moment/ && npm i moment@1.6.0 && npm test",
      "test-1.7": "rm -Rf ./node_modules/moment/ && npm i moment@1.7.0 && npm test",
      "test-latest": "rm -Rf ./node_modules/moment/ && npm i moment@latest && npm test",
      "lint": "./node_modules/.bin/eslint --ext .js . --ignore-path .gitignore",
      "lint-quiet": "./node_modules/.bin/eslint --ext .js --quiet . --ignore-path .gitignore",
      "coverage": "./node_modules/.bin/nyc npm run test"
    },
    "author": {
      "name": "Caleb Morris",
      "email": "caleb.morris.g@gmail.com"
    },
    "license": "MIT",
    "engine": {
      "node": ">= 8.0"
    },
    "dependencies": {
      "moment": ">=1.6.0"
    },
    "peerDependencies": {
      "moment": ">=1.6.0"
    },
    "devDependencies": {
      "@babel/core": "^7.5.5",
      "@babel/preset-env": "^7.5.5",
      "@babel/preset-react": "^7.0.0",
      "@babel/register": "^7.5.5",
      "@types/prop-types": "^15.7.3",
      "acorn": "^7.0.0",
      "babel-eslint": "^10.0.2",
      "chai": "^4.2.0",
      "coveralls": "^3.0.6",
      "enzyme": "^3.10.0",
      "enzyme-adapter-react-16": "^1.14.0",
      "eslint": "^6.1.0",
      "mocha": "^6.2.0",
      "nyc": "^14.1.1",
      "react": "^16.9.0",
      "react-dom": "^16.9.0",
      "react-test-renderer": "^16.9.0",
      "sinon": "^7.4.1"
    },
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-react-moment-proptypes-1.8.1-7ba4076147f6b5998f0d4f51d302d6d8c62049fd-integrity/node_modules/react-moment-proptypes/package.json",
    "readmeFilename": "README.md",
    "readme": "# react-moment-proptypes\n\n[![Build\nStatus](https://travis-ci.org/CalebMorris/react-moment-proptypes.svg?branch=master)](https://travis-ci.org/CalebMorris/react-moment-proptypes)\n[![Coverage Status](https://coveralls.io/repos/CalebMorris/react-moment-proptypes/badge.svg?branch=master&service=github)](https://coveralls.io/github/CalebMorris/react-moment-proptypes?branch=master)\n\nA React Proptype Validator to check if passed prop is a moment.js construct\n\n# Example\n\n``` jsx\nvar momentPropTypes = require('react-moment-proptypes');\n\nvar TestClass = React.createClass({\n  propTypes : {\n    dateThing : momentPropTypes.momentObj,\n    dateThingWithPredicate : momentPropTypes.momentObj.withPredicate(\n      function isUTC(momentObject) {\n        return momentObject.isUTC();\n      }\n    ),\n    stringThing : momentPropTypes.momentString,\n    durationThing: momentPropTypes.momentDurationObj,\n  },\n\n  render : function() {\n    return null\n  },\n});\n\n// Class Use\n<TestClass dateThing={moment()}\n           dateThingWithPredicate={moment.utc()}\n           stringThing={'12-12-2014'}\n           durationThing={moment.duration(3, 'hours')}/>\n\n```\n\n# Moment Configuration\n\n## createFromInputFallback\nMoment provides a `moment.createFromInputFallback` method you can define to create additional parsing rules.\n\nWith some versions of moment you may receive the following console warning:\n```\nDeprecation warning: value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are discouraged and will be removed in an upcoming major release. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.\nArguments:\n[0] _isAMomentObject: true, _isUTC: false, _useUTC: false, _l: undefined, _i: not a date, _f: undefined, _strict: undefined, _locale: [object Object]\nError\n    at [... stack trace]\n```\nExample implementations can be found at the [given documentation link](http://momentjs.com/guides/#/warnings/js-date/).\n\n\n# Tests\n\nTests were approached with `enzyme` and React's test utility renderer\n\n- `npm test` for running unit and integration tests\n- `npm run coverage` for current test coverage\n\n## Moment Versions\n\n- `npm run test-all` to test against tested moment version (1.6.0, 1.7.0, current)\n\nIf there is a desire for varying moment legacy support I'm willing to add it, but will stick to YAGNI until then.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/react-moment-proptypes/-/react-moment-proptypes-1.8.1.tgz#7ba4076147f6b5998f0d4f51d302d6d8c62049fd",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/react-moment-proptypes/-/react-moment-proptypes-1.8.1.tgz",
    "hash": "7ba4076147f6b5998f0d4f51d302d6d8c62049fd",
    "integrity": "sha512-Er940DxWoObfIqPrZNfwXKugjxMIuk1LAuEzn23gytzV6hKS/sw108wibi9QubfMN4h+nrlje8eUCSbQRJo2fQ==",
    "registry": "npm",
    "packageName": "react-moment-proptypes",
    "cacheIntegrity": "sha512-Er940DxWoObfIqPrZNfwXKugjxMIuk1LAuEzn23gytzV6hKS/sw108wibi9QubfMN4h+nrlje8eUCSbQRJo2fQ== sha1-e6QHYUf2tZmPDU9R0wLW2MYgSf0="
  },
  "registry": "npm",
  "hash": "7ba4076147f6b5998f0d4f51d302d6d8c62049fd"
}