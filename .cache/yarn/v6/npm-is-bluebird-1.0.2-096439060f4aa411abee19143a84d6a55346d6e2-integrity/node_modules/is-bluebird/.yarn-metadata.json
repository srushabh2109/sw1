{
  "manifest": {
    "name": "is-bluebird",
    "version": "1.0.2",
    "description": "Is this a bluebird promise I see before me?",
    "main": "./lib/",
    "author": {
      "name": "Overlook Motel"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/overlookmotel/is-bluebird.git"
    },
    "bugs": {
      "url": "https://github.com/overlookmotel/is-bluebird/issues"
    },
    "dependencies": {},
    "devDependencies": {
      "bluebird2": "^3.0.0",
      "bluebird3": "^3.0.6",
      "mocha": "^3.0.2",
      "chai": "^3.5.0",
      "jshint": "^2.9.3",
      "istanbul": "^0.4.5",
      "coveralls": "^2.11.12"
    },
    "keywords": [
      "bluebird",
      "promise",
      "is",
      "instance",
      "constructor",
      "version",
      "then",
      "check",
      "test"
    ],
    "scripts": {
      "test": "if [ $COVERAGE ]; then npm run coveralls; else npm run jshint && npm run test-main; fi",
      "jshint": "./node_modules/.bin/jshint lib test",
      "test-main": "./node_modules/mocha/bin/mocha --check-leaks --colors -t 10000 --reporter spec 'test/**/*.test.js'",
      "cover": "npm run cover-main && rm -rf coverage",
      "coveralls": "npm run cover-main && cat ./coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js && rm -rf ./coverage",
      "cover-main": "COVERAGE=true ./node_modules/.bin/istanbul cover ./node_modules/.bin/_mocha --report lcovonly -- -R spec 'test/**/*.test.js'"
    },
    "engines": {
      "node": ">=0.10.0"
    },
    "readmeFilename": "README.md",
    "license": "MIT",
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-is-bluebird-1.0.2-096439060f4aa411abee19143a84d6a55346d6e2-integrity/node_modules/is-bluebird/package.json",
    "readme": "# is-bluebird.js\n\n# Is this a bluebird promise I see before me?\n\n[![NPM version](https://img.shields.io/npm/v/is-bluebird.svg)](https://www.npmjs.com/package/is-bluebird)\n[![Build Status](https://img.shields.io/travis/overlookmotel/is-bluebird/master.svg)](http://travis-ci.org/overlookmotel/is-bluebird)\n[![Dependency Status](https://img.shields.io/david/overlookmotel/is-bluebird.svg)](https://david-dm.org/overlookmotel/is-bluebird)\n[![Dev dependency Status](https://img.shields.io/david/dev/overlookmotel/is-bluebird.svg)](https://david-dm.org/overlookmotel/is-bluebird)\n[![Coverage Status](https://img.shields.io/coveralls/overlookmotel/is-bluebird/master.svg)](https://coveralls.io/r/overlookmotel/is-bluebird)\n\n## Usage\n\nTools to check whether some input is a [bluebird](http://bluebirdjs.com/) promise, a bluebird promise constructor, or determining the version of bluebird from a promise or constructor.\n\n#### `isBluebird( promise )`\n\nReturns true if is a bluebird promise, false if not.\n\n```js\nvar isBluebird = require('is-bluebird');\nvar Bluebird = require('bluebird');\n\nconsole.log( isBluebird( Bluebird.resolve() ) ); // true\nconsole.log( isBluebird( Promise.resolve() ) ); // false (native JS promise)\n```\n\n#### `isBluebird.ctor( Promise )`\n\nReturns true if is bluebird promise constructor, false if not.\n\n```js\nvar isBluebird = require('is-bluebird');\nvar Bluebird = require('bluebird');\n\nconsole.log( isBluebird.ctor( Bluebird ) ); // true\nconsole.log( isBluebird.ctor( Promise ) ); // false (native JS promise)\n```\n\n#### `isBluebird.v2( promise )` / `isBluebird.v3( promise )`\n\nReturns true if is a bluebird promise of the specified version.\n\n```js\nvar isBluebird = require('is-bluebird');\nvar Bluebird2 = require('bluebird2');\nvar Bluebird3 = require('bluebird3');\n\nconsole.log( isBluebird.v2( Bluebird2.resolve() ) ); // true\nconsole.log( isBluebird.v2( Bluebird3.resolve() ) ); // false\nconsole.log( isBluebird.v2( Promise.resolve() ) ); // false (native JS promise)\n```\n\n#### `isBluebird.v2.ctor( Promise )` / `isBluebird.v3.ctor( Promise )`\n\nReturns true if is bluebird promise constructor of the specified version.\n\n```js\nvar isBluebird = require('is-bluebird');\nvar Bluebird2 = require('bluebird2');\nvar Bluebird3 = require('bluebird3');\n\nconsole.log( isBluebird.v2.ctor( Bluebird2 ) ); // true\nconsole.log( isBluebird.v2.ctor( Bluebird3 ) ); // false\nconsole.log( isBluebird.v2.ctor( Promise ) ); // false (native JS promise)\n```\n\n## Tests\n\nUse `npm test` to run the tests. Use `npm run cover` to check coverage.\n\n## Changelog\n\nSee [changelog.md](https://github.com/overlookmotel/is-bluebird/blob/master/changelog.md)\n\n## Issues\n\nIf you discover a bug, please raise an issue on Github. https://github.com/overlookmotel/is-bluebird/issues\n\n## Contribution\n\nPull requests are very welcome. Please:\n\n* ensure all tests pass before submitting PR\n* add an entry to changelog\n* add tests for new features\n* document new functionality/API additions in README\n",
    "licenseText": "Copyright (c) 2016 Overlook Motel (theoverlookmotel@gmail.com)\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in\n all copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/is-bluebird/-/is-bluebird-1.0.2.tgz#096439060f4aa411abee19143a84d6a55346d6e2",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/is-bluebird/-/is-bluebird-1.0.2.tgz",
    "hash": "096439060f4aa411abee19143a84d6a55346d6e2",
    "integrity": "sha1-CWQ5Bg9KpBGr7hkUOoTWpVNG1uI=",
    "registry": "npm",
    "packageName": "is-bluebird",
    "cacheIntegrity": "sha512-PDRu1vVip5dGQg5tfn2qVCCyxbBYu5MhYUJwSfL/RoGBI97n1fxvilVazxzptZW0gcmsMH17H4EVZZI5E/RSeA== sha1-CWQ5Bg9KpBGr7hkUOoTWpVNG1uI="
  },
  "registry": "npm",
  "hash": "096439060f4aa411abee19143a84d6a55346d6e2"
}