{
  "manifest": {
    "name": "knex",
    "version": "0.21.18",
    "description": "A batteries-included SQL query & schema builder for Postgres, MySQL and SQLite3 and the Browser",
    "main": "knex.js",
    "types": "types/index.d.ts",
    "engines": {
      "node": ">=10"
    },
    "scripts": {
      "format": "prettier --write \"{lib,bin,scripts,test}/**/*.js\"",
      "debug:test": "mocha --inspect-brk --exit -t 0 test/all-tests-suite.js",
      "debug:tape": "node --inspect-brk test/tape/index.js",
      "coveralls": "nyc report --reporter=lcov",
      "lint": "eslint \"lib/**/*.js\" \"test/**/*.js\"",
      "lint:types": "tsd && dtslint types",
      "lint:everything": "npm run lint:types && npm run lint",
      "test:unit": "mocha --exit -t 10000 --config test/mocha-unit-config-test.js && npm run test:cli",
      "test:db": "mocha --exit -t 10000 --config test/mocha-integration-config-test.js && npm run test:tape",
      "test:db:coverage": "nyc mocha --exit --check-leaks -t 10000 --config test/mocha-integration-config-test.js && npm run test:tape",
      "test:db:no-oracle": "cross-env DB=\"mssql mysql mysql2 postgres sqlite3\" mocha --exit -t 10000 --config test/mocha-integration-config-test.js && npm run test:tape",
      "test": "mocha --exit -t 10000 --config test/mocha-all-config-test.js && npm run test:tape && npm run test:cli",
      "test:coverage": "nyc mocha --exit --check-leaks -t 10000 --config test/mocha-all-config-test.js && npm run test:tape && npm run test:cli",
      "test:everything": "npm run lint:everything && npm run test:coverage",
      "test:mssql": "cross-env DB=mssql npm run test:db",
      "test:mysql": "cross-env DB=mysql npm run test:db",
      "test:mysql2": "cross-env DB=mysql2 npm run test:db",
      "test:sqlite": "cross-env DB=sqlite3 npm run test:db",
      "test:postgres": "cross-env DB=postgres npm run test:db",
      "test:tape": "node test/tape/index.js | tap-spec",
      "test:cli": "cross-env KNEX_PATH=../knex.js KNEX=bin/cli.js jake -f test/jake/Jakefile",
      "db:start": "docker-compose -f scripts/docker-compose.yml up --build -d mysql oracledbxe postgres mssql; docker-compose -f scripts/docker-compose.yml up waitmssql waitmysql waitpostgres waitoracledbxe",
      "db:start:no-oracle": "docker-compose -f scripts/docker-compose.yml up --build -d mysql postgres mssql && docker-compose -f scripts/docker-compose.yml up waitmssql waitmysql waitpostgres",
      "db:stop": "docker-compose -f scripts/docker-compose.yml down",
      "db:start:postgres": "docker-compose -f scripts/docker-compose.yml up --build -d postgres && docker-compose -f scripts/docker-compose.yml up waitpostgres",
      "db:stop:postgres": "docker-compose -f scripts/docker-compose.yml down",
      "stress:init": "docker-compose -f scripts/stress-test/docker-compose.yml up --no-start && docker-compose -f scripts/stress-test/docker-compose.yml start",
      "stress:test": "node scripts/stress-test/knex-stress-test.js | grep -A 5 -B 60 -- '- STATS '",
      "stress:destroy": "docker-compose -f scripts/stress-test/docker-compose.yml stop"
    },
    "dependencies": {
      "colorette": "1.2.1",
      "commander": "^6.2.0",
      "debug": "4.3.1",
      "esm": "^3.2.25",
      "getopts": "2.2.5",
      "interpret": "^2.2.0",
      "liftoff": "3.1.0",
      "lodash": "^4.17.20",
      "pg-connection-string": "2.4.0",
      "tarn": "^3.0.1",
      "tildify": "2.0.0",
      "v8flags": "^3.2.0"
    },
    "peerDependencies": {
      "mssql": "^6.2.1",
      "mysql": "^2.18.1",
      "mysql2": "^2.1.0",
      "pg": "^8.3.0",
      "sqlite3": "^5.0.0"
    },
    "peerDependenciesMeta": {
      "mssql": {
        "optional": true
      },
      "mysql": {
        "optional": true
      },
      "mysql2": {
        "optional": true
      },
      "pg": {
        "optional": true
      },
      "sqlite3": {
        "optional": true
      }
    },
    "lint-staged": {
      "*.{js,json}": [
        "prettier --write",
        "git add"
      ]
    },
    "devDependencies": {
      "@types/node": "^14.14.12",
      "chai": "^4.2.0",
      "chai-as-promised": "^7.1.1",
      "chai-subset-in-order": "^2.1.4",
      "cli-testlab": "^2.1.1",
      "coveralls": "^3.1.0",
      "cross-env": "^7.0.3",
      "dtslint": "4.0.6",
      "eslint": "^7.15.0",
      "eslint-config-prettier": "^7.0.0",
      "eslint-plugin-import": "^2.22.1",
      "husky": "^4.3.5",
      "jake": "^8.1.1",
      "JSONStream": "^1.3.5",
      "lint-staged": "^10.5.3",
      "mocha": "^8.2.1",
      "mock-fs": "^4.13.0",
      "mssql": "^6.3.0",
      "mysql": "^2.18.1",
      "mysql2": "^2.2.5",
      "nyc": "^15.1.0",
      "oracledb": "^5.1.0",
      "pg": "^8.5.1",
      "pg-query-stream": "^3.4.2",
      "prettier": "2.2.1",
      "rimraf": "^3.0.2",
      "sinon": "^9.2.2",
      "sinon-chai": "^3.5.0",
      "source-map-support": "^0.5.19",
      "sqlite3": "^5.0.0",
      "tap-spec": "^5.0.0",
      "tape": "^5.0.1",
      "toxiproxy-node-client": "^2.0.6",
      "ts-node": "^9.1.1",
      "tsd": "^0.14.0",
      "typescript": "4.1.3",
      "webpack-cli": "^3.3.12"
    },
    "buildDependencies": [
      "rimraf"
    ],
    "bin": {
      "knex": "bin/cli.js"
    },
    "repository": {
      "type": "git",
      "url": "git://github.com/knex/knex.git"
    },
    "homepage": "https://knexjs.org/",
    "keywords": [
      "sql",
      "query",
      "postgresql",
      "mysql",
      "sqlite3",
      "oracle",
      "mssql"
    ],
    "author": {
      "name": "Tim Griesser",
      "url": "https://github.com/tgriesser"
    },
    "contributors": [
      {
        "name": "Mikael Lepisto"
      },
      {
        "name": "Igor Savin",
        "url": "https://www.codeflashbacks.com"
      },
      {
        "name": "Simon Liden"
      },
      {
        "name": "Paul Gaurab",
        "url": "https://lorefnon.tech"
      },
      {
        "name": "Brian Lauber",
        "url": "https://briandamaged.org"
      }
    ],
    "browser": {
      "./lib/migrate/Migrator.js": "./lib/util/noop.js",
      "./lib/bin/cli.js": "./lib/util/noop.js",
      "./lib/seed/Seeder.js": "./lib/util/noop.js",
      "mssql": false,
      "mssql/lib/base": false,
      "tedious": false,
      "mysql": false,
      "mysql2": false,
      "pg": false,
      "pg-query-stream": false,
      "oracle": false,
      "sqlite3": false,
      "oracledb": false
    },
    "react-native": {
      "./lib/migrate": "./lib/util/noop.js",
      "./lib/seed": "./lib/util/noop.js"
    },
    "files": [
      "CONTRIBUTING.md",
      "README.md",
      "bin/*",
      "lib/*",
      "lib/*",
      "knex.js",
      "LICENSE",
      "CHANGELOG.md",
      "scripts/*",
      "types/index.d.ts",
      "types/result.d.ts",
      "types/tables.d.ts"
    ],
    "license": "MIT",
    "tonicExampleFilename": "scripts/runkit-example.js",
    "nyc": {
      "check-coverage": true,
      "lines": 84,
      "statements": 82,
      "functions": 83,
      "branches": 69,
      "extension": [
        ".js"
      ],
      "exclude": [
        "lib/dialects/oracle",
        "lib/dialects/oracledb"
      ]
    },
    "husky": {
      "hooks": {
        "pre-commit": "lint-staged"
      }
    },
    "tsd": {
      "directory": "test-tsd",
      "compilerOptions": {
        "esModuleInterop": true,
        "module": "commonjs"
      }
    },
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-knex-0.21.18-ca16e95b8b5c0891a6b012fb3fb34185e067b0e2-integrity/node_modules/knex/package.json",
    "readmeFilename": "README.md",
    "readme": "# [knex.js](http://knexjs.org)\n\n[![npm version](http://img.shields.io/npm/v/knex.svg)](https://npmjs.org/package/knex)\n[![npm downloads](https://img.shields.io/npm/dm/knex.svg)](https://npmjs.org/package/knex)\n![](https://github.com/knex/knex/workflows/CI/badge.svg)\n[![Coverage Status](https://coveralls.io/repos/knex/knex/badge.svg?branch=master)](https://coveralls.io/r/knex/knex?branch=master)\n[![Dependencies Status](https://david-dm.org/knex/knex.svg)](https://david-dm.org/knex/knex)\n[![Gitter chat](https://badges.gitter.im/tgriesser/knex.svg)](https://gitter.im/tgriesser/knex)\n[![Language Grade: JavaScript](https://img.shields.io/lgtm/grade/javascript/g/knex/knex.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/g/knex/knex/context:javascript)\n\n> **A SQL query builder that is _flexible_, _portable_, and _fun_ to use!**\n\nA batteries-included, multi-dialect (MSSQL, MySQL, PostgreSQL, SQLite3, Oracle (including Oracle Wallet Authentication)) query builder for\nNode.js, featuring:\n\n- [transactions](http://knexjs.org/#Transactions)\n- [connection pooling](http://knexjs.org/#Installation-pooling)\n- [streaming queries](http://knexjs.org/#Interfaces-Streams)\n- both a [promise](http://knexjs.org/#Interfaces-Promises) and [callback](http://knexjs.org/#Interfaces-Callbacks) API\n- a [thorough test suite](https://travis-ci.org/knex/knex)\n- the ability to [run in the Browser](http://knexjs.org/#Installation-browser)\n\nNode.js versions 10+ are supported.\n\n[Read the full documentation to get started!](http://knexjs.org)  \n[Or check out our Recipes wiki to search for solutions to some specific problems](https://github.com/knex/knex/wiki/Recipes)  \nIf upgrading from older version, see [Upgrading instructions](https://github.com/knex/knex/blob/master/UPGRADING.md)\n\nFor support and questions, join the `#bookshelf` channel on freenode IRC\n\nFor an Object Relational Mapper, see:\n\n- http://bookshelfjs.org\n- https://github.com/Vincit/objection.js\n\nTo see the SQL that Knex will generate for a given query, see: [Knex Query Lab](https://michaelavila.com/knex-querylab/)\n\n## Examples\n\nWe have several examples [on the website](http://knexjs.org). Here is the first one to get you started:\n\n```js\nconst knex = require('knex')({\n  client: 'sqlite3',\n  connection: {\n    filename: './data.db',\n  },\n});\n\n// Create a table\nknex.schema\n  .createTable('users', table => {\n    table.increments('id');\n    table.string('user_name');\n  })\n\n  // ...and another\n  .createTable('accounts', table => {\n    table.increments('id');\n    table.string('account_name');\n    table\n      .integer('user_id')\n      .unsigned()\n      .references('users.id');\n  })\n\n  // Then query the table...\n  .then(() =>\n    knex('users').insert({ user_name: 'Tim' })\n  )\n\n  // ...and using the insert id, insert into the other table.\n  .then(rows => \n    knex('accounts').insert({ account_name: 'knex', user_id: rows[0] })\n  )\n\n  // Query both of the rows.\n  .then(() => \n    knex('users')\n      .join('accounts', 'users.id', 'accounts.user_id')\n      .select('users.user_name as user', 'accounts.account_name as account')\n  )\n\n  // map over the results\n  .then(rows =>\n    rows.map(row => {\n      console.log(row)\n    })\n  )\n\n  // Finally, add a .catch handler for the promise chain\n  .catch(e => {\n    console.error(e);\n  });\n```\n",
    "licenseText": "Copyright (c) 2013-present Tim Griesser\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/knex/-/knex-0.21.18.tgz#ca16e95b8b5c0891a6b012fb3fb34185e067b0e2",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/knex/-/knex-0.21.18.tgz",
    "hash": "ca16e95b8b5c0891a6b012fb3fb34185e067b0e2",
    "integrity": "sha512-hP4Qyy2LjQLsabQYc6YgDFHb+CJJBjQz1TMPTKyN85CF2NLIsZsF4FDe0NvQXeXMeak3E/kKr5iJog1JBm6ZCQ==",
    "registry": "npm",
    "packageName": "knex",
    "cacheIntegrity": "sha512-hP4Qyy2LjQLsabQYc6YgDFHb+CJJBjQz1TMPTKyN85CF2NLIsZsF4FDe0NvQXeXMeak3E/kKr5iJog1JBm6ZCQ== sha1-yhbpW4tcCJGmsBL7P7NBheBnsOI="
  },
  "registry": "npm",
  "hash": "ca16e95b8b5c0891a6b012fb3fb34185e067b0e2"
}