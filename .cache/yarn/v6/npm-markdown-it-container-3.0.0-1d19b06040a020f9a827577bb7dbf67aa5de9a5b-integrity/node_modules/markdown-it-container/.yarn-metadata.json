{
  "manifest": {
    "name": "markdown-it-container",
    "version": "3.0.0",
    "description": "Plugin to create block-level custom containers for markdown-it markdown parser",
    "repository": {
      "type": "git",
      "url": "https://github.com/markdown-it/markdown-it-container.git"
    },
    "license": "MIT",
    "scripts": {
      "lint": "eslint .",
      "test": "npm run lint && nyc mocha",
      "coverage": "npm run test && nyc report --reporter html",
      "report-coveralls": "nyc report --reporter=text-lcov | coveralls"
    },
    "keywords": [
      "markdown-it-plugin",
      "markdown-it",
      "markdown"
    ],
    "devDependencies": {
      "browserify": "^16.5.1",
      "coveralls": "^3.1.0",
      "eslint": "^7.1.0",
      "markdown-it": "markdown-it/markdown-it",
      "markdown-it-testgen": "~0.1.0",
      "mocha": "^7.2.0",
      "nyc": "^15.1.0",
      "terser": "^4.7.0"
    },
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-markdown-it-container-3.0.0-1d19b06040a020f9a827577bb7dbf67aa5de9a5b-integrity/node_modules/markdown-it-container/package.json",
    "readmeFilename": "README.md",
    "readme": "# markdown-it-container\n\n[![Build Status](https://img.shields.io/travis/markdown-it/markdown-it-container/master.svg?style=flat)](https://travis-ci.org/markdown-it/markdown-it-container)\n[![NPM version](https://img.shields.io/npm/v/markdown-it-container.svg?style=flat)](https://www.npmjs.org/package/markdown-it-container)\n[![Coverage Status](https://img.shields.io/coveralls/markdown-it/markdown-it-container/master.svg?style=flat)](https://coveralls.io/r/markdown-it/markdown-it-container?branch=master)\n\n> Plugin for creating block-level custom containers for [markdown-it](https://github.com/markdown-it/markdown-it) markdown parser.\n\n__v2.+ requires `markdown-it` v5.+, see changelog.__\n\nWith this plugin you can create block containers like:\n\n```\n::: warning\n*here be dragons*\n:::\n```\n\n.... and specify how they should be rendered. If no renderer defined, `<div>` with\ncontainer name class will be created:\n\n```html\n<div class=\"warning\">\n<em>here be dragons</em>\n</div>\n```\n\nMarkup is the same as for [fenced code blocks](http://spec.commonmark.org/0.18/#fenced-code-blocks).\nDifference is, that marker use another character and content is rendered as markdown markup.\n\n\n## Installation\n\nnode.js, browser:\n\n```bash\n$ npm install markdown-it-container --save\n$ bower install markdown-it-container --save\n```\n\n\n## API\n\n```js\nvar md = require('markdown-it')()\n            .use(require('markdown-it-container'), name [, options]);\n```\n\nParams:\n\n- __name__ - container name (mandatory)\n- __options:__\n   - __validate__ - optional, function to validate tail after opening marker, should\n     return `true` on success.\n   - __render__ - optional, renderer function for opening/closing tokens.\n   - __marker__ - optional (`:`), character to use in delimiter.\n\n\n## Example\n\n```js\nvar md = require('markdown-it')();\n\nmd.use(require('markdown-it-container'), 'spoiler', {\n\n  validate: function(params) {\n    return params.trim().match(/^spoiler\\s+(.*)$/);\n  },\n\n  render: function (tokens, idx) {\n    var m = tokens[idx].info.trim().match(/^spoiler\\s+(.*)$/);\n\n    if (tokens[idx].nesting === 1) {\n      // opening tag\n      return '<details><summary>' + md.utils.escapeHtml(m[1]) + '</summary>\\n';\n\n    } else {\n      // closing tag\n      return '</details>\\n';\n    }\n  }\n});\n\nconsole.log(md.render('::: spoiler click me\\n*content*\\n:::\\n'));\n\n// Output:\n//\n// <details><summary>click me</summary>\n// <p><em>content</em></p>\n// </details>\n```\n\n## License\n\n[MIT](https://github.com/markdown-it/markdown-it-container/blob/master/LICENSE)\n",
    "licenseText": "Copyright (c) 2015 Vitaly Puzrin, Alex Kocharin.\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/markdown-it-container/-/markdown-it-container-3.0.0.tgz#1d19b06040a020f9a827577bb7dbf67aa5de9a5b",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/markdown-it-container/-/markdown-it-container-3.0.0.tgz",
    "hash": "1d19b06040a020f9a827577bb7dbf67aa5de9a5b",
    "integrity": "sha512-y6oKTq4BB9OQuY/KLfk/O3ysFhB3IMYoIWhGJEidXt1NQFocFK2sA2t0NYZAMyMShAGL6x5OPIbrmXPIqaN9rw==",
    "registry": "npm",
    "packageName": "markdown-it-container",
    "cacheIntegrity": "sha512-y6oKTq4BB9OQuY/KLfk/O3ysFhB3IMYoIWhGJEidXt1NQFocFK2sA2t0NYZAMyMShAGL6x5OPIbrmXPIqaN9rw== sha1-HRmwYECgIPmoJ1d7t9v2eqXemls="
  },
  "registry": "npm",
  "hash": "1d19b06040a020f9a827577bb7dbf67aa5de9a5b"
}