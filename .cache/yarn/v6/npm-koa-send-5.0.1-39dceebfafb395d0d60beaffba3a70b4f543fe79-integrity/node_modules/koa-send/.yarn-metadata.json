{
  "manifest": {
    "name": "koa-send",
    "description": "Transfer static files",
    "version": "5.0.1",
    "main": "index.js",
    "keywords": [
      "koa",
      "file",
      "static",
      "sendfile"
    ],
    "repository": {
      "type": "git",
      "url": "git://github.com/koajs/send.git"
    },
    "files": [
      "index.js"
    ],
    "nyc": {
      "reporter": [
        "lcov",
        "text-summary"
      ],
      "report-dir": "./coverage"
    },
    "devDependencies": {
      "eslint": "^4.19.1",
      "eslint-config-standard": "^11.0.0",
      "eslint-plugin-import": "^2.12.0",
      "eslint-plugin-node": "^6.0.1",
      "eslint-plugin-promise": "^3.8.0",
      "eslint-plugin-standard": "^3.1.0",
      "iltorb": "^2.3.2",
      "koa": "^2.5.1",
      "mocha": "^5.2.0",
      "nyc": "^15.0.0",
      "should": "^13.2.1",
      "supertest": "^3.1.0"
    },
    "license": "MIT",
    "dependencies": {
      "debug": "^4.1.1",
      "http-errors": "^1.7.3",
      "resolve-path": "^1.4.0"
    },
    "scripts": {
      "lint": "eslint --fix .",
      "test": "npm run lint && mocha --require should --reporter spec --exit",
      "test-cov": "nyc npm run test"
    },
    "engines": {
      "node": ">= 8"
    },
    "bugs": {
      "url": "https://github.com/koajs/send/issues"
    },
    "homepage": "https://github.com/koajs/send",
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-koa-send-5.0.1-39dceebfafb395d0d60beaffba3a70b4f543fe79-integrity/node_modules/koa-send/package.json",
    "readmeFilename": "README.md",
    "readme": "# [**koa-send**](https://github.com/koajs/send)\n\n>  Static file serving middleware.\n\n[![NPM version][npm-image]][npm-url]\n[![Build status][travis-image]][travis-url]\n[![Test coverage][coveralls-image]][coveralls-url]\n[![Dependency Status][david-image]][david-url]\n[![License][license-image]][license-url]\n[![Downloads][downloads-image]][downloads-url]\n\n\n## Installation\n\n```js\n$ npm install koa-send\n```\n\n\n## Options\n\n - `maxage` Browser cache max-age in milliseconds. (defaults to `0`).\n - `immutable` Tell the browser the resource is immutable and can be cached indefinitely. (defaults to `false`).\n - `hidden` Allow transfer of hidden files. (defaults to `false`).\n - [`root`](#root-path) Root directory to restrict file access.\n - `index` Name of the index file to serve automatically when visiting the root location. (defaults to none).\n - `gzip` Try to serve the gzipped version of a file automatically when `gzip` is supported by a client and if the requested file with `.gz` extension exists. (defaults to `true`).\n - `brotli` Try to serve the brotli version of a file automatically when `brotli` is supported by a client and if the requested file with `.br` extension exists. (defaults to `true`).\n - `format` If not `false` (defaults to `true`), format the path to serve static file servers and not require a trailing slash for directories, so that you can do both `/directory` and `/directory/`.\n - [`setHeaders`](#setheaders) Function to set custom headers on response.\n - `extensions` Try to match extensions from passed array to search for file when no extension is sufficed in URL. First found is served. (defaults to `false`)\n\n### Root path\n\n  Note that `root` is required, defaults to `''` and will be resolved,\n  removing the leading `/` to make the path relative and this\n  path must not contain \"..\", protecting developers from\n  concatenating user input. If you plan on serving files based on\n  user input supply a `root` directory from which to serve from.\n\n  For example to serve files from `./public`:\n\n```js\napp.use(async (ctx) => {\n  await send(ctx, ctx.path, { root: __dirname + '/public' });\n})\n```\n\n  To serve developer specified files:\n\n```js\napp.use(async (ctx) => {\n  await send(ctx, 'path/to/my.js');\n})\n```\n\n### setHeaders\n\nThe function is called as `fn(res, path, stats)`, where the arguments are:\n* `res`: the response object.\n* `path`: the resolved file path that is being sent.\n* `stats`: the stats object of the file that is being sent.\n\nYou should only use the `setHeaders` option when you wish to edit the `Cache-Control` or `Last-Modified` headers, because doing it before is useless (it's overwritten by `send`), and doing it after is too late because the headers are already sent.\n\nIf you want to edit any other header, simply set them before calling `send`.\n\n\n## Example\n\n```js\nconst send = require('koa-send');\nconst Koa = require('koa');\nconst app = new Koa();\n\n// $ GET /package.json\n// $ GET /\n\napp.use(async (ctx) => {\n  if ('/' == ctx.path) return ctx.body = 'Try GET /package.json';\n  await send(ctx, ctx.path);\n})\n\napp.listen(3000);\nconsole.log('listening on port 3000');\n```\n\n\n## License\n\n[MIT](/LICENSE)\n\n\n[npm-image]: https://img.shields.io/npm/v/koa-send.svg?style=flat-square\n[npm-url]: https://npmjs.org/package/koa-send\n[github-tag]: http://img.shields.io/github/tag/koajs/send.svg?style=flat-square\n[github-url]: https://github.com/koajs/send/tags\n[travis-image]: https://img.shields.io/travis/koajs/send.svg?style=flat-square\n[travis-url]: https://travis-ci.org/koajs/send\n[coveralls-image]: https://img.shields.io/coveralls/koajs/send.svg?style=flat-square\n[coveralls-url]: https://coveralls.io/r/koajs/send?branch=master\n[david-image]: http://img.shields.io/david/koajs/send.svg?style=flat-square\n[david-url]: https://david-dm.org/koajs/send\n[license-image]: http://img.shields.io/npm/l/koa-send.svg?style=flat-square\n[license-url]: LICENSE\n[downloads-image]: http://img.shields.io/npm/dm/koa-send.svg?style=flat-square\n[downloads-url]: https://npmjs.org/package/koa-send\n[gittip-image]: https://img.shields.io/gittip/jonathanong.svg?style=flat-square\n[gittip-url]: https://www.gittip.com/jonathanong/\n",
    "licenseText": "(The MIT License)\n\nCopyright (c) 2020 Koa contributors\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/koa-send/-/koa-send-5.0.1.tgz#39dceebfafb395d0d60beaffba3a70b4f543fe79",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/koa-send/-/koa-send-5.0.1.tgz",
    "hash": "39dceebfafb395d0d60beaffba3a70b4f543fe79",
    "integrity": "sha512-tmcyQ/wXXuxpDxyNXv5yNNkdAMdFRqwtegBXUaowiQzUKqJehttS0x2j0eOZDQAyloAth5w6wwBImnFzkUz3pQ==",
    "registry": "npm",
    "packageName": "koa-send",
    "cacheIntegrity": "sha512-tmcyQ/wXXuxpDxyNXv5yNNkdAMdFRqwtegBXUaowiQzUKqJehttS0x2j0eOZDQAyloAth5w6wwBImnFzkUz3pQ== sha1-Odzuv6+zldDWC+r/ujpwtPVD/nk="
  },
  "registry": "npm",
  "hash": "39dceebfafb395d0d60beaffba3a70b4f543fe79"
}