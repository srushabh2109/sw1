{
  "manifest": {
    "name": "colorette",
    "version": "1.2.2",
    "type": "module",
    "main": "index.cjs",
    "module": "index.js",
    "types": "index.d.ts",
    "description": "Easily set the color and style of text in the terminal.",
    "repository": {
      "type": "git",
      "url": "https://github.com/jorgebucaran/colorette.git"
    },
    "license": "MIT",
    "exports": {
      "./package.json": "./package.json",
      ".": {
        "require": "./index.cjs",
        "import": "./index.js"
      }
    },
    "files": [
      "*.*(c)[tj]s*"
    ],
    "author": {
      "name": "Jorge Bucaran"
    },
    "keywords": [
      "terminal",
      "styles",
      "color",
      "ansi"
    ],
    "scripts": {
      "test": "c8 twist tests/*.js",
      "build": "node -e \"fs.writeFileSync('index.cjs',fs.readFileSync('index.js','utf8').replace(/export const /g,'exports.'),'utf8')\"",
      "deploy": "npm test && git commit --all --message $tag && git tag --sign $tag --message $tag && git push && git push --tags",
      "release": "tag=$npm_package_version npm run deploy && npm publish --access public",
      "prepare": "npm run build"
    },
    "devDependencies": {
      "c8": "*",
      "twist": "*"
    },
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-colorette-1.2.2-cbcc79d5e99caea2dbf10eb3a26fd8b3e6acfa94-integrity/node_modules/colorette/package.json",
    "readmeFilename": "README.md",
    "readme": "# Colorette\n\n> Easily set the color and style of text in the terminal.\n\n- No wonky prototype method-chain API.\n- Automatic color support detection.\n- Up to [2x faster](#benchmarks) than alternatives.\n- [`NO_COLOR`](https://no-color.org) friendly. ðŸ‘Œ\n\nHere's the first example to get you started.\n\n```js\nimport { blue, bold, underline } from \"colorette\"\n\nconsole.log(\n  blue(\"I'm blue\"),\n  bold(blue(\"da ba dee\")),\n  underline(bold(blue(\"da ba daa\")))\n)\n```\n\nHere's an example using [template literals](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals).\n\n```js\nconsole.log(`\n  There's a ${underline(blue(\"house\"))},\n  With a ${bold(blue(\"window\"))},\n  And a ${blue(\"corvette\")}\n  And everything is blue\n`)\n```\n\nOf course, you can nest styles without breaking existing color sequences.\n\n```js\nconsole.log(bold(`I'm ${blue(`da ba ${underline(\"dee\")} da ba`)} daa`))\n```\n\nFeeling adventurous? Try the [pipeline operator](https://github.com/tc39/proposal-pipeline-operator).\n\n```js\nconsole.log(\"Da ba dee da ba daa\" |> blue |> bold)\n```\n\n## Installation\n\n```console\nnpm install colorette\n```\n\n## API\n\n### `<style>(string)`\n\n```js\nimport { blue } from \"colorette\"\n\nblue(\"I'm blue\") //=> \\x1b[34mI'm blue\\x1b[39m\n```\n\nSee [supported styles]().\n\n### `options.enabled`\n\nColorette automatically detects if your terminal can display color, but you can toggle color as needed.\n\n```js\nimport { options } from \"colorette\"\n\noptions.enabled = false\n```\n\nYou can also force the use of color globally by setting `FORCE_COLOR=` or `NO_COLOR=` from the CLI.\n\n```console\n$ FORCE_COLOR= node example.js >log\n$ NO_COLOR= node example.js\n```\n\n## Supported styles\n\n| Colors  | Background Colors | Bright Colors | Bright Background Colors | Modifiers         |\n| ------- | ----------------- | ------------- | ------------------------ | ----------------- |\n| black   | bgBlack           | blackBright   | bgBlackBright            | dim               |\n| red     | bgRed             | redBright     | bgRedBright              | **bold**          |\n| green   | bgGreen           | greenBright   | bgGreenBright            | hidden            |\n| yellow  | bgYellow          | yellowBright  | bgYellowBright           | _italic_          |\n| blue    | bgBlue            | blueBright    | bgBlueBright             | <u>underline</u>  |\n| magenta | bgMagenta         | magentaBright | bgMagentaBright          | ~~strikethrough~~ |\n| cyan    | bgCyan            | cyanBright    | bgCyanBright             | reset             |\n| white   | bgWhite           | whiteBright   | bgWhiteBright            |                   |\n| gray    |                   |               |                          |                   |\n\n## Benchmarks\n\n```console\nnpm --prefix bench start\n```\n\n## License\n\n[MIT](LICENSE.md)\n",
    "licenseText": "Copyright Â© Jorge Bucaran <<https://jorgebucaran.com>>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/colorette/-/colorette-1.2.2.tgz#cbcc79d5e99caea2dbf10eb3a26fd8b3e6acfa94",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/colorette/-/colorette-1.2.2.tgz",
    "hash": "cbcc79d5e99caea2dbf10eb3a26fd8b3e6acfa94",
    "integrity": "sha512-MKGMzyfeuutC/ZJ1cba9NqcNpfeqMUcYmyF1ZFY6/Cn7CNSAKx6a+s48sqLqyAiZuaP2TcqMhoo+dlwFnVxT9w==",
    "registry": "npm",
    "packageName": "colorette",
    "cacheIntegrity": "sha512-MKGMzyfeuutC/ZJ1cba9NqcNpfeqMUcYmyF1ZFY6/Cn7CNSAKx6a+s48sqLqyAiZuaP2TcqMhoo+dlwFnVxT9w== sha1-y8x51emcrqLb8Q6zom/Ys+as+pQ="
  },
  "registry": "npm",
  "hash": "cbcc79d5e99caea2dbf10eb3a26fd8b3e6acfa94"
}